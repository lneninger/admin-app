{"ast":null,"code":"import { Injectable, EventEmitter, Component, ElementRef, Output, Input, NgZone, Renderer2, NgModule } from '@angular/core';\nimport { of, Subject, combineLatest, timer } from 'rxjs';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { takeUntil, map, tap } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction FilePickerComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function FilePickerComponent_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      ɵngcc0.ɵɵnextContext();\n\n      const _r1 = ɵngcc0.ɵɵreference(2);\n\n      return _r1.click();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"file-drop\", 7);\n    ɵngcc0.ɵɵlistener(\"onFileDrop\", function FilePickerComponent_div_0_Template_file_drop_onFileDrop_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.dropped($event);\n    });\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"customstyle\", \"custom-drag\")(\"captions\", ctx_r0.captions);\n  }\n}\n\nfunction FilePickerComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(2, \"img\", 10);\n    ɵngcc0.ɵɵlistener(\"load\", function FilePickerComponent_div_3_Template_img_load_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.cropperImgLoaded($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 11);\n    ɵngcc0.ɵɵelementStart(4, \"button\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function FilePickerComponent_div_3_Template_button_click_4_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onCropSubmit();\n    });\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"button\", 13);\n    ɵngcc0.ɵɵlistener(\"click\", function FilePickerComponent_div_3_Template_button_click_6_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.closeCropper({\n        file: ctx_r10.currentCropperFile,\n        fileName: ctx_r10.currentCropperFile.name\n      });\n    });\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"src\", ctx_r2.safeCropImgUrl, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r2.captions == null ? null : ctx_r2.captions.cropper == null ? null : ctx_r2.captions.cropper.crop, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r2.captions == null ? null : ctx_r2.captions.cropper == null ? null : ctx_r2.captions.cropper.cancel, \" \");\n  }\n}\n\nfunction FilePickerComponent_file_preview_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"file-preview-container\", 14);\n    ɵngcc0.ɵɵlistener(\"removeFile\", function FilePickerComponent_file_preview_container_5_Template_file_preview_container_removeFile_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.removeFile($event);\n    })(\"uploadSuccess\", function FilePickerComponent_file_preview_container_5_Template_file_preview_container_uploadSuccess_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.onUploadSuccess($event);\n    })(\"uploadFail\", function FilePickerComponent_file_preview_container_5_Template_file_preview_container_uploadFail_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.onUploadFail($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"previewFiles\", ctx_r3.files)(\"adapter\", ctx_r3.adapter)(\"itemTemplate\", ctx_r3.itemTemplate)(\"captions\", ctx_r3.captions)(\"enableAutoUpload\", ctx_r3.enableAutoUpload);\n  }\n}\n\nconst _c0 = [[[\"\", 8, \"dropzonetemplate\"]]];\n\nconst _c1 = function (a0) {\n  return {\n    \"visually-hidden\": a0\n  };\n};\n\nconst _c2 = [\".dropzoneTemplate\"];\n\nfunction FilePreviewItemComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(1, \"img\", 18);\n    ɵngcc0.ɵɵlistener(\"click\", function FilePreviewItemComponent_div_0_div_2_Template_img_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r9.imageClicked.next(ctx_r9.fileItem);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"src\", ctx_r2.safeUrl, ɵngcc0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction FilePreviewItemComponent_div_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r3.fileItem.fileName.split(\".\").pop());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.fileType, \" \");\n  }\n}\n\nfunction FilePreviewItemComponent_div_0_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.niceBytes(ctx_r4.fileItem.file == null ? null : ctx_r4.fileItem.file.size));\n  }\n}\n\nfunction FilePreviewItemComponent_div_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵelement(1, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction FilePreviewItemComponent_div_0_refresh_icon_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"refresh-icon\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function FilePreviewItemComponent_div_0_refresh_icon_12_Template_refresh_icon_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.onRetry();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction FilePreviewItemComponent_div_0_a_15_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"a\", 24);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r7.captions == null ? null : ctx_r7.captions.previewCard == null ? null : ctx_r7.captions.previewCard.uploadError);\n  }\n}\n\nconst _c3 = function (a0) {\n  return {\n    \"width\": a0\n  };\n};\n\nfunction FilePreviewItemComponent_div_0_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 25);\n    ɵngcc0.ɵɵelement(2, \"div\", 26);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 27);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 28);\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r8.uploadProgress + \"%\"));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r8.uploadProgress, \" %\");\n  }\n}\n\nfunction FilePreviewItemComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, FilePreviewItemComponent_div_0_div_2_Template, 2, 1, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(3, FilePreviewItemComponent_div_0_div_3_Template, 2, 2, \"div\", 5);\n    ɵngcc0.ɵɵelement(4, \"div\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(6, \"a\", 8);\n    ɵngcc0.ɵɵelementStart(7, \"p\");\n    ɵngcc0.ɵɵtext(8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(9, FilePreviewItemComponent_div_0_div_9_Template, 2, 1, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n    ɵngcc0.ɵɵtemplate(11, FilePreviewItemComponent_div_0_div_11_Template, 2, 0, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(12, FilePreviewItemComponent_div_0_refresh_icon_12_Template, 1, 0, \"refresh-icon\", 12);\n    ɵngcc0.ɵɵelementStart(13, \"a\", 13);\n    ɵngcc0.ɵɵlistener(\"click\", function FilePreviewItemComponent_div_0_Template_a_click_13_listener() {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.onRemove(ctx_r13.fileItem);\n    });\n    ɵngcc0.ɵɵelement(14, \"close-icon\", 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(15, FilePreviewItemComponent_div_0_a_15_Template, 1, 1, \"a\", 15);\n    ɵngcc0.ɵɵtemplate(16, FilePreviewItemComponent_div_0_ng_container_16_Template, 6, 4, \"ng-container\", 16);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(11, _c1, ctx_r0.itemTemplate));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isImageFile && (ctx_r0.fileItem == null ? null : ctx_r0.fileItem.file));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.isImageFile || !(ctx_r0.fileItem == null ? null : ctx_r0.fileItem.file));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r0.fileItem.fileName);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.fileItem.fileName);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.fileItem == null ? null : ctx_r0.fileItem.file);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.uploadError && !ctx_r0.uploadProgress && (ctx_r0.fileItem == null ? null : ctx_r0.fileItem.file));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.uploadError);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r0.captions == null ? null : ctx_r0.captions.previewCard == null ? null : ctx_r0.captions.previewCard.remove);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.uploadError && !ctx_r0.uploadProgress);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.uploadProgress);\n  }\n}\n\nfunction FilePreviewItemComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c4 = function (a0, a1) {\n  return {\n    fileItem: a0,\n    uploadProgress: a1\n  };\n};\n\nfunction FilePreviewContainerComponent_preview_lightbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"preview-lightbox\", 2);\n    ɵngcc0.ɵɵlistener(\"previewClose\", function FilePreviewContainerComponent_preview_lightbox_0_Template_preview_lightbox_previewClose_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.closeLightbox();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"file\", ctx_r0.lightboxFile);\n  }\n}\n\nfunction FilePreviewContainerComponent_file_preview_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"file-preview-item\", 3);\n    ɵngcc0.ɵɵlistener(\"removeFile\", function FilePreviewContainerComponent_file_preview_item_1_Template_file_preview_item_removeFile_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.removeFile.next($event);\n    })(\"uploadSuccess\", function FilePreviewContainerComponent_file_preview_item_1_Template_file_preview_item_uploadSuccess_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.uploadSuccess.next($event);\n    })(\"uploadFail\", function FilePreviewContainerComponent_file_preview_item_1_Template_file_preview_item_uploadFail_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.uploadFail.next($event);\n    })(\"imageClicked\", function FilePreviewContainerComponent_file_preview_item_1_Template_file_preview_item_imageClicked_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.openLightbox($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r4 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"fileItem\", file_r4)(\"itemTemplate\", ctx_r1.itemTemplate)(\"adapter\", ctx_r1.adapter)(\"captions\", ctx_r1.captions)(\"enableAutoUpload\", ctx_r1.enableAutoUpload);\n  }\n}\n\nfunction FileComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵelement(1, \"cloud-icon\", 5);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 6);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 7);\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"button\", 8);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.captions == null ? null : ctx_r1.captions.dropzone == null ? null : ctx_r1.captions.dropzone.title, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.captions == null ? null : ctx_r1.captions.dropzone == null ? null : ctx_r1.captions.dropzone.or, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.captions == null ? null : ctx_r1.captions.dropzone == null ? null : ctx_r1.captions.dropzone.browse, \" \");\n  }\n}\n\nconst _c5 = [\"*\"];\n\nconst _c6 = function (a0) {\n  return {\n    \"visibility\": a0\n  };\n};\n\nconst _c7 = \"[_nghost-%COMP%]{cursor:pointer;display:block}svg[_ngcontent-%COMP%]{fill:#95a5a6}\";\nlet FilePickerService = /*#__PURE__*/(() => {\n  class FilePickerService {\n    constructor(sanitizer) {\n      this.sanitizer = sanitizer;\n    }\n\n    mockUploadFile(formData) {\n      const event = new CustomEvent('customevent', {\n        detail: {\n          type: 'UploadProgreess'\n        }\n      });\n      return of(event.detail);\n    }\n\n    createSafeUrl(file) {\n      try {\n        const url = window.URL.createObjectURL(file);\n        const safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n        return safeUrl;\n      } catch (er) {\n        console.log(er);\n      }\n    }\n\n  }\n\n  FilePickerService.ɵfac = function FilePickerService_Factory(t) {\n    return new (t || FilePickerService)(ɵngcc0.ɵɵinject(ɵngcc1.DomSanitizer));\n  };\n\n  FilePickerService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FilePickerService,\n    factory: FilePickerService.ɵfac\n  });\n  return FilePickerService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction GET_FILE_CATEGORY_TYPE(fileExtension) {\n  if (fileExtension.includes('image')) {\n    return 'image';\n  } else if (fileExtension.includes('video')) {\n    return 'video';\n  } else {\n    return 'other';\n  }\n}\n\nfunction GET_FILE_TYPE(name) {\n  return name.substr(name.lastIndexOf('.') + 1).toUpperCase();\n}\n\nfunction IS_IMAGE_FILE(fileType) {\n  const IMAGE_TYPES = ['PNG', 'JPG', 'JPEG', 'BMP', 'WEBP', 'JFIF', 'TIFF'];\n  return IMAGE_TYPES.includes(fileType.toUpperCase());\n}\n\nvar FileValidationTypes = /*#__PURE__*/(() => {\n  (function (FileValidationTypes) {\n    FileValidationTypes[\"fileMaxSize\"] = \"FILE_MAX_SIZE\";\n    FileValidationTypes[\"fileMaxCount\"] = \"FILE_MAX_COUNT\";\n    FileValidationTypes[\"totalMaxSize\"] = \"TOTAL_MAX_SIZE\";\n    FileValidationTypes[\"extensions\"] = \"EXTENSIONS\";\n    FileValidationTypes[\"uploadType\"] = \"UPLOAD_TYPE\";\n    FileValidationTypes[\"customValidator\"] = \"CUSTOM_VALIDATOR\";\n  })(FileValidationTypes || (FileValidationTypes = {}));\n\n  return FileValidationTypes;\n})();\nvar UploadStatus = /*#__PURE__*/(() => {\n  (function (UploadStatus) {\n    UploadStatus[\"UPLOADED\"] = \"UPLOADED\";\n    UploadStatus[\"IN_PROGRESS\"] = \"IN PROGRESS\";\n    UploadStatus[\"ERROR\"] = \"ERROR\";\n  })(UploadStatus || (UploadStatus = {}));\n\n  return UploadStatus;\n})();\n\nclass FilePickerAdapter {}\n\nconst DefaultCaptions = {\n  dropzone: {\n    title: 'Drag and drop file here',\n    or: 'or',\n    browse: 'Browse Files'\n  },\n  cropper: {\n    crop: 'Crop',\n    cancel: 'Cancel'\n  },\n  previewCard: {\n    remove: 'Remove',\n    uploadError: 'Error on upload'\n  }\n};\nconst DEFAULT_CROPPER_OPTIONS = {\n  dragMode: 'crop',\n  aspectRatio: 1,\n  autoCrop: true,\n  movable: true,\n  zoomable: true,\n  scalable: true,\n  autoCropArea: 0.8\n};\n\nfunction BITS_TO_MB(size) {\n  return parseFloat(size.toString()) / 1048576;\n}\n\nlet FilePickerComponent = /*#__PURE__*/(() => {\n  class FilePickerComponent {\n    constructor(fileService, elementRef) {\n      this.fileService = fileService;\n      this.elementRef = elementRef;\n      /** Emitted when file upload via api successfully. Emitted for every file */\n\n      this.uploadSuccess = new EventEmitter();\n      /** Emitted when file upload via api failed. Emitted for every file */\n\n      this.uploadFail = new EventEmitter();\n      /** Emitted when file is removed via api successfully. Emitted for every file */\n\n      this.removeSuccess = new EventEmitter();\n      /** Emitted on file validation fail */\n\n      this.validationError = new EventEmitter();\n      /** Emitted when file is added and passed validations. Not uploaded yet */\n\n      this.fileAdded = new EventEmitter();\n      /** Emitted when file is removed from fileList */\n\n      this.fileRemoved = new EventEmitter();\n      /** Whether to enable cropper. Default: disabled */\n\n      this.enableCropper = false;\n      /** Whether to show default drag and drop zone. Default:true */\n\n      this.showeDragDropZone = true;\n      /** Whether to show default files preview container. Default: true */\n\n      this.showPreviewContainer = true;\n      /** Single or multiple. Default: multi */\n\n      this.uploadType = 'multi';\n      /** Cropped canvas options. */\n\n      this.croppedCanvasOptions = {};\n      /** Custom captions input. Used for multi language support */\n\n      this.captions = DefaultCaptions;\n      /** captions object */\n\n      /** Whether to auto upload file on file choose or not. Default: true */\n\n      this.enableAutoUpload = true;\n      this.files = [];\n      /** Files array for cropper. Will be shown equentially if crop enabled */\n\n      this.filesForCropper = [];\n      this._cropClosed$ = new Subject();\n      this._onDestroy$ = new Subject();\n    }\n\n    ngOnInit() {\n      this._setCropperOptions();\n\n      this._listenToCropClose();\n    }\n\n    ngOnDestroy() {\n      this._onDestroy$.next();\n\n      this._onDestroy$.complete();\n    }\n    /** On input file selected */\n\n\n    onChange(event) {\n      const files = Array.from(event);\n      this.handleFiles(files).subscribe();\n    }\n    /** On file dropped */\n\n\n    dropped(event) {\n      const files = event.files;\n      const filesForUpload = [];\n\n      for (const droppedFile of files) {\n        // Is it a file?\n        if (droppedFile.fileEntry.isFile) {\n          const fileEntry = droppedFile.fileEntry;\n          fileEntry.file(file => {\n            filesForUpload.push(file);\n          });\n        } else {\n          // It was a directory (empty directories are added, otherwise only files)\n          const fileEntry = droppedFile.fileEntry; // console.log(droppedFile.relativePath, fileEntry);\n        }\n      }\n\n      setTimeout(() => this.handleFiles(filesForUpload).subscribe());\n    }\n    /** Emits event when file upload api returns success  */\n\n\n    onUploadSuccess(fileItem) {\n      this.uploadSuccess.next(fileItem);\n    }\n    /** Emits event when file upload api returns success  */\n\n\n    onUploadFail(er) {\n      this.uploadFail.next(er);\n    }\n    /** Emits event when file remove api returns success  */\n\n\n    onRemoveSuccess(fileItem) {\n      this.removeSuccess.next(fileItem);\n      this.removeFileFromList(fileItem);\n    }\n\n    getSafeUrl(file) {\n      return this.fileService.createSafeUrl(file);\n    }\n    /** Removes file from UI and sends api */\n\n\n    removeFile(fileItem) {\n      if (!this.enableAutoUpload) {\n        this.removeFileFromList(fileItem);\n        return;\n      }\n\n      if (this.adapter) {\n        this.adapter.removeFile(fileItem).subscribe(res => {\n          this.onRemoveSuccess(fileItem);\n        });\n      } else {\n        console.warn('no adapter was provided');\n      }\n    }\n    /** Listen when Cropper is closed and open new cropper if next image exists */\n\n\n    _listenToCropClose() {\n      this._cropClosed$.pipe(takeUntil(this._onDestroy$)).subscribe(res => {\n        const croppedIndex = this.filesForCropper.findIndex(item => item.name === res.fileName);\n        const nextFile = croppedIndex !== -1 ? this.filesForCropper[croppedIndex + 1] : undefined;\n        this.filesForCropper = [...this.filesForCropper].filter(item => item.name !== res.fileName);\n\n        if (nextFile) {\n          this.openCropper(nextFile);\n        }\n      });\n    }\n    /** Sets custom cropper options if avaiable */\n\n\n    _setCropperOptions() {\n      if (!this.cropperOptions) {\n        this._setDefaultCropperOptions();\n      }\n    }\n    /** Sets manual cropper options if no custom options are avaiable */\n\n\n    _setDefaultCropperOptions() {\n      this.cropperOptions = DEFAULT_CROPPER_OPTIONS;\n    }\n    /** Handles input and drag/drop files */\n\n\n    handleFiles(files) {\n      if (!this.isValidMaxFileCount(files)) {\n        return of(null);\n      }\n\n      const isValidUploadSync = files.every(item => this._validateFileSync(item));\n      const asyncFunctions = files.map(item => this._validateFileAsync(item));\n      return combineLatest([...asyncFunctions]).pipe(map(res => {\n        const isValidUploadAsync = res.every(result => result === true);\n\n        if (!isValidUploadSync || !isValidUploadAsync) {\n          return;\n        }\n\n        files.forEach((file, index) => {\n          this.handleInputFile(file, index);\n        });\n      }));\n    }\n    /** Validates synchronous validations */\n\n\n    _validateFileSync(file) {\n      if (!file) {\n        return;\n      }\n\n      if (!this.isValidUploadType(file)) {\n        return;\n      }\n\n      if (!this.isValidExtension(file, file.name)) {\n        return;\n      }\n\n      return true;\n    }\n    /** Validates asynchronous validations */\n\n\n    _validateFileAsync(file) {\n      if (!this.customValidator) {\n        return of(true);\n      }\n\n      return this.customValidator(file).pipe(tap(res => {\n        if (!res) {\n          this.validationError.next({\n            file,\n            error: FileValidationTypes.customValidator\n          });\n        }\n      }));\n    }\n    /** Handles input and drag&drop files */\n\n\n    handleInputFile(file, index) {\n      const type = GET_FILE_CATEGORY_TYPE(file.type);\n\n      if (type === 'image' && this.enableCropper) {\n        this.filesForCropper.push(file);\n\n        if (!this.currentCropperFile) {\n          this.openCropper(file);\n        }\n      } else {\n        /** Size is not initially checked on handleInputFiles because of cropper size change */\n        if (this.isValidSize(file, file.size)) {\n          this.pushFile(file);\n        }\n      }\n    }\n    /** Validates if upload type is single so another file cannot be added */\n\n\n    isValidUploadType(file) {\n      if (this.uploadType === 'single' && this.files.length > 0) {\n        this.validationError.next({\n          file,\n          error: FileValidationTypes.uploadType\n        });\n        return false;\n      } else {\n        return true;\n      }\n    }\n    /** Validates max file count */\n\n\n    isValidMaxFileCount(files) {\n      if (!this.fileMaxCount || this.fileMaxCount >= this.files.length + files.length) {\n        return true;\n      } else {\n        this.validationError.next({\n          file: null,\n          error: FileValidationTypes.fileMaxCount\n        });\n        return false;\n      }\n    }\n    /** Add file to file list after succesfull validation */\n\n\n    pushFile(file, fileName = file.name) {\n      this.files.push({\n        file,\n        fileName\n      });\n      this.fileAdded.next({\n        file,\n        fileName\n      });\n    }\n    /** Opens cropper for image crop */\n\n\n    openCropper(file) {\n      if (window.CROPPER || typeof Cropper !== 'undefined') {\n        this.safeCropImgUrl = this.fileService.createSafeUrl(file);\n        this.currentCropperFile = file;\n      } else {\n        console.warn(\"please import cropperjs script and styles to use cropper feature or disable it by setting [enableCropper]='false'\");\n        return;\n      }\n    }\n    /** On img load event */\n\n\n    cropperImgLoaded(e) {\n      const image = document.getElementById('cropper-img');\n      this.cropper = new Cropper(image, this.cropperOptions);\n    }\n    /** Close or cancel cropper */\n\n\n    closeCropper(filePreview) {\n      this.currentCropperFile = undefined;\n      this.cropper = undefined;\n      setTimeout(() => this._cropClosed$.next(filePreview), 200);\n    }\n    /** Removes files from files list */\n\n\n    removeFileFromList(file) {\n      this.files = this.files.filter(f => f.fileName !== file.fileName);\n      this.fileRemoved.next(file);\n    }\n    /** Validates file extension */\n\n\n    isValidExtension(file, fileName) {\n      if (!this.fileExtensions) {\n        return true;\n      }\n\n      const extension = fileName.split('.').pop();\n      const fileExtensions = this.fileExtensions.map(ext => ext.toLowerCase());\n\n      if (fileExtensions.indexOf(extension.toLowerCase()) === -1) {\n        this.validationError.next({\n          file,\n          error: FileValidationTypes.extensions\n        });\n        return false;\n      }\n\n      return true;\n    }\n    /** Validates selected file size and total file size */\n\n\n    isValidSize(file, size) {\n      /** Validating selected file size */\n      const res = BITS_TO_MB(size);\n      let isValidFileSize;\n      let isValidTotalFileSize;\n\n      if (!this.fileMaxSize || this.fileMaxSize && res < this.fileMaxSize) {\n        isValidFileSize = true;\n      } else {\n        this.validationError.next({\n          file,\n          error: FileValidationTypes.fileMaxSize\n        });\n      }\n      /** Validating Total Files Size */\n\n\n      const totalBits = this.files.map(f => f.file ? f.file.size : 0).reduce((acc, curr) => acc + curr, 0);\n\n      if (!this.totalMaxSize || this.totalMaxSize && BITS_TO_MB(totalBits + file.size) < this.totalMaxSize) {\n        isValidTotalFileSize = true;\n      } else {\n        this.validationError.next({\n          file,\n          error: FileValidationTypes.totalMaxSize\n        });\n      }\n\n      return !!isValidFileSize && isValidTotalFileSize;\n    }\n    /** when crop button submitted */\n\n\n    onCropSubmit() {\n      this.cropper.getCroppedCanvas(this.croppedCanvasOptions).toBlob(this._blobFallBack.bind(this), 'image/png');\n    }\n    /** After crop submit */\n\n\n    _blobFallBack(blob) {\n      if (!blob) {\n        return;\n      }\n\n      if (this.isValidSize(blob, blob.size)) {\n        this.pushFile(blob, this.currentCropperFile.name);\n      }\n\n      this.closeCropper({\n        file: blob,\n        fileName: this.currentCropperFile.name\n      });\n    }\n\n  }\n\n  FilePickerComponent.ɵfac = function FilePickerComponent_Factory(t) {\n    return new (t || FilePickerComponent)(ɵngcc0.ɵɵdirectiveInject(FilePickerService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  FilePickerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FilePickerComponent,\n    selectors: [[\"ngx-awesome-uploader\"]],\n    inputs: {\n      enableCropper: \"enableCropper\",\n      showeDragDropZone: \"showeDragDropZone\",\n      showPreviewContainer: \"showPreviewContainer\",\n      uploadType: \"uploadType\",\n      croppedCanvasOptions: \"croppedCanvasOptions\",\n      captions: \"captions\",\n      enableAutoUpload: \"enableAutoUpload\",\n      cropperOptions: \"cropperOptions\",\n      customValidator: \"customValidator\",\n      itemTemplate: \"itemTemplate\",\n      fileMaxSize: \"fileMaxSize\",\n      fileMaxCount: \"fileMaxCount\",\n      totalMaxSize: \"totalMaxSize\",\n      accept: \"accept\",\n      fileExtensions: \"fileExtensions\",\n      adapter: \"adapter\",\n      dropzoneTemplate: \"dropzoneTemplate\"\n    },\n    outputs: {\n      uploadSuccess: \"uploadSuccess\",\n      uploadFail: \"uploadFail\",\n      removeSuccess: \"removeSuccess\",\n      validationError: \"validationError\",\n      fileAdded: \"fileAdded\",\n      fileRemoved: \"fileRemoved\"\n    },\n    ngContentSelectors: _c2,\n    decls: 6,\n    vars: 8,\n    consts: [[\"class\", \"file-drop-wrapper\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"file\", \"name\", \"file[]\", \"id\", \"fileInput\", 1, \"file-input\", 3, \"multiple\", \"accept\", \"click\", \"change\"], [\"fileInput\", \"\"], [\"class\", \"cropperJsOverlay\", 4, \"ngIf\"], [1, \"files-preview-wrapper\", 3, \"ngClass\"], [3, \"previewFiles\", \"adapter\", \"itemTemplate\", \"captions\", \"enableAutoUpload\", \"removeFile\", \"uploadSuccess\", \"uploadFail\", 4, \"ngIf\"], [1, \"file-drop-wrapper\", 3, \"click\"], [3, \"customstyle\", \"captions\", \"onFileDrop\"], [1, \"cropperJsOverlay\"], [1, \"cropperJsBox\"], [\"id\", \"cropper-img\", 3, \"src\", \"load\"], [1, \"cropper-actions\"], [\"type\", \"button\", 1, \"cropSubmit\", 3, \"click\"], [\"type\", \"button\", 1, \"cropCancel\", 3, \"click\"], [3, \"previewFiles\", \"adapter\", \"itemTemplate\", \"captions\", \"enableAutoUpload\", \"removeFile\", \"uploadSuccess\", \"uploadFail\"]],\n    template: function FilePickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵtemplate(0, FilePickerComponent_div_0_Template, 3, 2, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function FilePickerComponent_Template_input_click_1_listener() {\n          ɵngcc0.ɵɵrestoreView(_r15);\n\n          const _r1 = ɵngcc0.ɵɵreference(2);\n\n          return _r1.value = null;\n        })(\"change\", function FilePickerComponent_Template_input_change_1_listener() {\n          ɵngcc0.ɵɵrestoreView(_r15);\n\n          const _r1 = ɵngcc0.ɵɵreference(2);\n\n          return ctx.onChange(_r1.files);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, FilePickerComponent_div_3_Template, 8, 3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(5, FilePickerComponent_file_preview_container_5_Template, 1, 5, \"file-preview-container\", 5);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showeDragDropZone);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"multiple\", ctx.uploadType === \"multi\" ? \"multiple\" : \"\")(\"accept\", ctx.accept);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.currentCropperFile);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(6, _c1, !ctx.showPreviewContainer));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.files);\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgIf, FileComponent, ɵngcc2.NgClass, FilePreviewContainerComponent];\n    },\n    styles: [\"*[_ngcontent-%COMP%]{box-sizing:border-box}[_nghost-%COMP%]{align-items:center;border-radius:6px;display:flex;flex-direction:column;height:100%;max-width:440px;overflow:auto}.files-preview-wrapper[_ngcontent-%COMP%], [_nghost-%COMP%]{width:100%}#cropper-img[_ngcontent-%COMP%]{display:none;max-width:60vw}#cropper-img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:100%;width:100%}.file-drop-wrapper[_ngcontent-%COMP%]{background:#fafbfd;padding-top:20px;width:100%}.preview-container[_ngcontent-%COMP%]{display:flex}.cropperJsOverlay[_ngcontent-%COMP%]{background:rgba(0,0,0,.32);height:100vh;left:0;position:fixed;top:0;width:100vw;z-index:999}.cropperJsBox[_ngcontent-%COMP%], .cropperJsOverlay[_ngcontent-%COMP%]{align-items:center;display:flex;justify-content:center}.cropperJsBox[_ngcontent-%COMP%]{flex-direction:column;max-height:calc(100vh - 88px);max-width:90vw}.cropperJsBox[_ngcontent-%COMP%]   .cropper-actions[_ngcontent-%COMP%]{display:flex}.cropperJsBox[_ngcontent-%COMP%]   .cropper-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border:0;border-radius:6px;cursor:pointer;margin:5px;padding:12px 25px}.cropperJsBox[_ngcontent-%COMP%]   .cropper-actions[_ngcontent-%COMP%]   .cropSubmit[_ngcontent-%COMP%]{background:#16a085;color:#fff} .cropper img{max-height:300px!important}#images[_ngcontent-%COMP%]{display:flex;justify-content:center;overflow-x:auto;width:500px}#images[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%]{align-items:flex-end;display:flex;flex:0 0 100px;flex-direction:column;margin:0 2px}#fileInput[_ngcontent-%COMP%]{display:none}.uploader-submit-btn[_ngcontent-%COMP%]{background:#ffd740;border:0;border-radius:4px;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);color:rgba(0,0,0,.87);cursor:pointer;font-size:15px;line-height:36px;margin-top:12px;padding:0 16px}button[_ngcontent-%COMP%]:disabled{background:#dcdcdc;color:rgba(0,0,0,.26)}.visually-hidden[_ngcontent-%COMP%]{-moz-appearance:none;-webkit-appearance:none;border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;outline:0;overflow:hidden;padding:0;position:absolute;width:1px}\"]\n  });\n  return FilePickerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CloseIconComponent = /*#__PURE__*/(() => {\n  class CloseIconComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  CloseIconComponent.ɵfac = function CloseIconComponent_Factory(t) {\n    return new (t || CloseIconComponent)();\n  };\n\n  CloseIconComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CloseIconComponent,\n    selectors: [[\"close-icon\"]],\n    decls: 3,\n    vars: 0,\n    consts: [[\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 24 24\", \"width\", \"18px\", \"height\", \"18px\"], [\"d\", \"M0 0h24v24H0z\", \"fill\", \"none\"], [\"d\", \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"]],\n    template: function CloseIconComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵelement(1, \"path\", 1);\n        ɵngcc0.ɵɵelement(2, \"path\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    styles: [_c7]\n  });\n  return CloseIconComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FilePreviewItemComponent = /*#__PURE__*/(() => {\n  class FilePreviewItemComponent {\n    constructor(fileService) {\n      this.fileService = fileService;\n      this.removeFile = new EventEmitter();\n      this.uploadSuccess = new EventEmitter();\n      this.uploadFail = new EventEmitter();\n      this.imageClicked = new EventEmitter();\n    }\n\n    ngOnInit() {\n      if (this.fileItem.file) {\n        this._uploadFile(this.fileItem);\n\n        this.safeUrl = this.getSafeUrl(this.fileItem.file);\n      }\n\n      this.fileType = GET_FILE_TYPE(this.fileItem.fileName);\n      this.isImageFile = IS_IMAGE_FILE(this.fileType);\n    }\n\n    getSafeUrl(file) {\n      return this.fileService.createSafeUrl(file);\n    }\n    /** Converts bytes to nice size */\n\n\n    niceBytes(x) {\n      const units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n      let l = 0;\n      let n = parseInt(x, 10) || 0;\n\n      while (n >= 1024 && ++l) {\n        n = n / 1024;\n      } // include a decimal point and a tenths-place digit if presenting\n      // less than ten of KB or greater units\n\n\n      return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + units[l];\n    }\n    /** Retry file upload when upload was unsuccessfull */\n\n\n    onRetry() {\n      this._uploadFile(this.fileItem);\n    }\n\n    onRemove(fileItem) {\n      this._uploadUnsubscribe();\n\n      this.removeFile.next(Object.assign(Object.assign({}, fileItem), {\n        uploadResponse: this.uploadResponse\n      }));\n    }\n\n    _uploadFile(fileItem) {\n      if (!this.enableAutoUpload) {\n        return;\n      }\n\n      if (this.adapter) {\n        this._uploadSubscription = this.adapter.uploadFile(fileItem).subscribe(res => {\n          if (res && res.status === UploadStatus.UPLOADED) {\n            this._onUploadSuccess(res.body, fileItem);\n\n            this.uploadProgress = undefined;\n          }\n\n          if (res && res.status === UploadStatus.IN_PROGRESS) {\n            this.uploadProgress = res.progress;\n          }\n\n          if (res && res.status === UploadStatus.ERROR) {\n            this.uploadError = true;\n            this.uploadFail.next(res.body);\n            this.uploadProgress = undefined;\n          }\n        }, er => {\n          this.uploadError = true;\n          this.uploadFail.next(er);\n          this.uploadProgress = undefined;\n        });\n      } else {\n        console.warn('no adapter was provided');\n      }\n    }\n    /** Emits event when file upload api returns success  */\n\n\n    _onUploadSuccess(uploadResponse, fileItem) {\n      this.uploadResponse = uploadResponse;\n      this.fileItem.uploadResponse = uploadResponse;\n      this.uploadSuccess.next(Object.assign(Object.assign({}, fileItem), {\n        uploadResponse\n      }));\n    }\n    /** Cancel upload. Cancels request  */\n\n\n    _uploadUnsubscribe() {\n      if (this._uploadSubscription) {\n        this._uploadSubscription.unsubscribe();\n      }\n    }\n\n  }\n\n  FilePreviewItemComponent.ɵfac = function FilePreviewItemComponent_Factory(t) {\n    return new (t || FilePreviewItemComponent)(ɵngcc0.ɵɵdirectiveInject(FilePickerService));\n  };\n\n  FilePreviewItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FilePreviewItemComponent,\n    selectors: [[\"file-preview-item\"]],\n    inputs: {\n      fileItem: \"fileItem\",\n      adapter: \"adapter\",\n      itemTemplate: \"itemTemplate\",\n      captions: \"captions\",\n      enableAutoUpload: \"enableAutoUpload\"\n    },\n    outputs: {\n      removeFile: \"removeFile\",\n      uploadSuccess: \"uploadSuccess\",\n      uploadFail: \"uploadFail\",\n      imageClicked: \"imageClicked\"\n    },\n    decls: 2,\n    vars: 6,\n    consts: [[\"class\", \"file-preview-wrapper\", 3, \"ngClass\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"file-preview-wrapper\", 3, \"ngClass\"], [1, \"file-preview-thumbnail\"], [\"class\", \"img-preview-thumbnail\", 4, \"ngIf\"], [\"class\", \"other-preview-thumbnail\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"thumbnail-backdrop\"], [1, \"file-preview-description\"], [\"href\", \"javascript:void(0)\", 1, \"file-preview-title\", 3, \"title\"], [\"class\", \"file-preview-size\", 4, \"ngIf\"], [1, \"file-preview-actions\"], [\"class\", \"ngx-checkmark-wrapper\", 4, \"ngIf\"], [3, \"click\", 4, \"ngIf\"], [1, \"ngx-close-icon-wrapper\", 3, \"title\", \"click\"], [1, \"ngx-close-icon\"], [\"class\", \"file-upload-error-wrapper\", \"href\", \"javascipt:void(0)\", 3, \"title\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"img-preview-thumbnail\"], [3, \"src\", \"click\"], [1, \"other-preview-thumbnail\", 3, \"ngClass\"], [1, \"file-preview-size\"], [1, \"ngx-checkmark-wrapper\"], [1, \"ngx-checkmark\"], [3, \"click\"], [\"href\", \"javascipt:void(0)\", 1, \"file-upload-error-wrapper\", 3, \"title\"], [1, \"file-upload-progress-bar-wrapper\"], [1, \"file-upload-progress-bar\", 3, \"ngStyle\"], [1, \"file-upload-percentage-wrapper\"], [1, \"file-upload-percentage\"]],\n    template: function FilePreviewItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FilePreviewItemComponent_div_0_Template, 17, 13, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, FilePreviewItemComponent_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.fileItem);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.itemTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(3, _c4, ctx.fileItem, ctx.uploadProgress));\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgIf, ɵngcc2.NgClass, RefreshIconComponent, CloseIconComponent, ɵngcc2.NgStyle, ɵngcc2.NgTemplateOutlet];\n    },\n    styles: [\"[_nghost-%COMP%]{border-bottom:1px solid #ebeef1;display:block;max-width:440px;padding:20px 16px;position:relative}.visually-hidden[_ngcontent-%COMP%]{-moz-appearance:none;-webkit-appearance:none;border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;outline:0;overflow:hidden;padding:0;position:absolute;width:1px}.file-preview-wrapper[_ngcontent-%COMP%]{display:flex;width:100%}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]{cursor:pointer;position:relative;z-index:2}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]   .img-preview-thumbnail[_ngcontent-%COMP%]{height:36px;width:36px}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]   .img-preview-thumbnail[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{-o-object-fit:cover;border-radius:6px;height:100%;object-fit:cover;width:100%}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]   .other-preview-thumbnail[_ngcontent-%COMP%]{align-items:center;background:#706fd3;border-radius:4px;color:#fff;display:flex;font-size:12px;font-weight:700;height:36px;justify-content:center;overflow:hidden;white-space:nowrap;width:36px}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]   .other-preview-thumbnail.pdf[_ngcontent-%COMP%]{background:#e4394e}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]   .other-preview-thumbnail.doc[_ngcontent-%COMP%], .file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]   .other-preview-thumbnail.docx[_ngcontent-%COMP%]{background:#2196f3}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]   .other-preview-thumbnail.xls[_ngcontent-%COMP%], .file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]   .other-preview-thumbnail.xlsx[_ngcontent-%COMP%]{background:#4caf50}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]   .other-preview-thumbnail.ppt[_ngcontent-%COMP%], .file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]   .other-preview-thumbnail.txt[_ngcontent-%COMP%]{background:#ff9800}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]   .thumbnail-backdrop[_ngcontent-%COMP%]{background:rgba(43,56,71,.2);border-radius:6px;height:100%;left:0;pointer-events:none;position:absolute;top:0;transition:all .1s ease-in-out;visibility:hidden;width:100%}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]:hover   .thumbnail-backdrop[_ngcontent-%COMP%]{visibility:visible}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-thumbnail[_ngcontent-%COMP%]:active   .thumbnail-backdrop[_ngcontent-%COMP%]{background:rgba(43,56,71,.4);visibility:visible}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-description[_ngcontent-%COMP%]{align-items:flex-start;color:#74809d;display:flex;flex:1;flex-direction:column;overflow:hidden;padding-left:16px;padding-right:16px;position:relative;z-index:2}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-description[_ngcontent-%COMP%]   .file-preview-title[_ngcontent-%COMP%]{color:#74809d;cursor:default;font-weight:700;text-decoration:none;width:90%}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-description[_ngcontent-%COMP%]   .file-preview-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-description[_ngcontent-%COMP%]   .file-preview-size[_ngcontent-%COMP%]{color:#979fb8;font-size:12px}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-actions[_ngcontent-%COMP%]{align-items:center;display:flex;font-size:10px;position:relative;z-index:3}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-actions[_ngcontent-%COMP%]   .ngx-checkmark-wrapper[_ngcontent-%COMP%]{background:#43d084;border-radius:50%;cursor:pointer;font-size:22px;height:20px;position:relative;width:20px}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-actions[_ngcontent-%COMP%]   .ngx-checkmark-wrapper[_ngcontent-%COMP%]   .ngx-checkmark[_ngcontent-%COMP%]{height:19px;left:0;position:absolute;top:0;width:19px}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-actions[_ngcontent-%COMP%]   .ngx-checkmark-wrapper[_ngcontent-%COMP%]   .ngx-checkmark[_ngcontent-%COMP%]:after{border:1px solid #fff;border-width:0 3px 3px 0;content:\\\"\\\";display:block;height:7px;left:7px;position:absolute;top:4px;transform:rotate(45deg);width:3px}.file-preview-wrapper[_ngcontent-%COMP%]   .file-preview-actions[_ngcontent-%COMP%]   .ngx-close-icon-wrapper[_ngcontent-%COMP%]{border-radius:50%;cursor:pointer;margin-left:5px;padding:3px}.file-preview-wrapper[_ngcontent-%COMP%]   .file-upload-percentage-wrapper[_ngcontent-%COMP%], .file-preview-wrapper[_ngcontent-%COMP%]   .file-upload-progress-bar-wrapper[_ngcontent-%COMP%]{bottom:0;height:95%;left:0;margin:auto;position:absolute;top:0;width:100%;z-index:1}.file-preview-wrapper[_ngcontent-%COMP%]   .file-upload-progress-bar[_ngcontent-%COMP%]{background:#eef1fa;border-radius:6px;height:95%;transition:width .3s ease-in;width:0}.file-preview-wrapper[_ngcontent-%COMP%]   .file-upload-percentage[_ngcontent-%COMP%]{color:#c2cdda;font-size:19px;padding-right:10%;padding-top:5%;text-align:right}.file-preview-wrapper[_ngcontent-%COMP%]   .file-upload-error-wrapper[_ngcontent-%COMP%]{background:rgba(254,84,111,.06);bottom:0;height:95%;left:0;margin:auto;position:absolute;top:0;width:100%;z-index:1}\"]\n  });\n  return FilePreviewItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FilePreviewContainerComponent = /*#__PURE__*/(() => {\n  class FilePreviewContainerComponent {\n    constructor() {\n      this.removeFile = new EventEmitter();\n      this.uploadSuccess = new EventEmitter();\n      this.uploadFail = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    openLightbox(file) {\n      this.lightboxFile = file;\n    }\n\n    closeLightbox() {\n      this.lightboxFile = undefined;\n    }\n\n  }\n\n  FilePreviewContainerComponent.ɵfac = function FilePreviewContainerComponent_Factory(t) {\n    return new (t || FilePreviewContainerComponent)();\n  };\n\n  FilePreviewContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FilePreviewContainerComponent,\n    selectors: [[\"file-preview-container\"]],\n    inputs: {\n      previewFiles: \"previewFiles\",\n      itemTemplate: \"itemTemplate\",\n      enableAutoUpload: \"enableAutoUpload\",\n      adapter: \"adapter\",\n      captions: \"captions\"\n    },\n    outputs: {\n      removeFile: \"removeFile\",\n      uploadSuccess: \"uploadSuccess\",\n      uploadFail: \"uploadFail\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"file\", \"previewClose\", 4, \"ngIf\"], [3, \"fileItem\", \"itemTemplate\", \"adapter\", \"captions\", \"enableAutoUpload\", \"removeFile\", \"uploadSuccess\", \"uploadFail\", \"imageClicked\", 4, \"ngFor\", \"ngForOf\"], [3, \"file\", \"previewClose\"], [3, \"fileItem\", \"itemTemplate\", \"adapter\", \"captions\", \"enableAutoUpload\", \"removeFile\", \"uploadSuccess\", \"uploadFail\", \"imageClicked\"]],\n    template: function FilePreviewContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FilePreviewContainerComponent_preview_lightbox_0_Template, 1, 1, \"preview-lightbox\", 0);\n        ɵngcc0.ɵɵtemplate(1, FilePreviewContainerComponent_file_preview_item_1_Template, 1, 5, \"file-preview-item\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.lightboxFile);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.previewFiles);\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgIf, PreviewLightboxComponent, ɵngcc2.NgForOf, FilePreviewItemComponent];\n    },\n    styles: [\"[_nghost-%COMP%]{background:#fafbfd;display:flex;flex-direction:column;justify-content:flex-start;width:100%}\"]\n  });\n  return FilePreviewContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\r\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\r\n * properties of the given {@link FileSystemEntry}.\r\n */\n\n\nclass UploadFile {\n  constructor(relativePath, fileEntry) {\n    this.relativePath = relativePath;\n    this.fileEntry = fileEntry;\n  }\n\n}\n\nclass UploadEvent {\n  constructor(files) {\n    this.files = files;\n  }\n\n}\n\nlet FileComponent = /*#__PURE__*/(() => {\n  class FileComponent {\n    constructor(zone, renderer) {\n      this.zone = zone;\n      this.renderer = renderer;\n      this.customstyle = null;\n      this.disableIf = false;\n      this.onFileDrop = new EventEmitter();\n      this.onFileOver = new EventEmitter();\n      this.onFileLeave = new EventEmitter();\n      this.stack = [];\n      this.files = [];\n      this.dragoverflag = false;\n      this.globalDisable = false;\n      this.numOfActiveReadEntries = 0;\n\n      if (!this.customstyle) {\n        this.customstyle = 'drop-zone';\n      }\n\n      this.globalStart = this.renderer.listen('document', 'dragstart', evt => {\n        this.globalDisable = true;\n      });\n      this.globalEnd = this.renderer.listen('document', 'dragend', evt => {\n        this.globalDisable = false;\n      });\n    }\n\n    onDragOver(event) {\n      if (!this.globalDisable && !this.disableIf) {\n        if (!this.dragoverflag) {\n          this.dragoverflag = true;\n          this.onFileOver.emit(event);\n        }\n\n        this.preventAndStop(event);\n      }\n    }\n\n    onDragLeave(event) {\n      if (!this.globalDisable && !this.disableIf) {\n        if (this.dragoverflag) {\n          this.dragoverflag = false;\n          this.onFileLeave.emit(event);\n        }\n\n        this.preventAndStop(event);\n      }\n    }\n\n    dropFiles(event) {\n      if (!this.globalDisable && !this.disableIf) {\n        this.dragoverflag = false;\n        event.dataTransfer.dropEffect = 'copy';\n        let length;\n\n        if (event.dataTransfer.items) {\n          length = event.dataTransfer.items.length;\n        } else {\n          length = event.dataTransfer.files.length;\n        }\n\n        for (let i = 0; i < length; i++) {\n          let entry;\n\n          if (event.dataTransfer.items) {\n            if (event.dataTransfer.items[i].webkitGetAsEntry) {\n              entry = event.dataTransfer.items[i].webkitGetAsEntry();\n            }\n          } else {\n            if (event.dataTransfer.files[i].webkitGetAsEntry) {\n              entry = event.dataTransfer.files[i].webkitGetAsEntry();\n            }\n          }\n\n          if (!entry) {\n            const file = event.dataTransfer.files[i];\n\n            if (file) {\n              const fakeFileEntry = {\n                name: file.name,\n                isDirectory: false,\n                isFile: true,\n                file: callback => {\n                  callback(file);\n                }\n              };\n              const toUpload = new UploadFile(fakeFileEntry.name, fakeFileEntry);\n              this.addToQueue(toUpload);\n            }\n          } else {\n            if (entry.isFile) {\n              const toUpload = new UploadFile(entry.name, entry);\n              this.addToQueue(toUpload);\n            } else if (entry.isDirectory) {\n              this.traverseFileTree(entry, entry.name);\n            }\n          }\n        }\n\n        this.preventAndStop(event);\n        const timerObservable = timer(200, 200);\n        this.subscription = timerObservable.subscribe(t => {\n          if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\n            this.onFileDrop.emit(new UploadEvent(this.files));\n            this.files = [];\n          }\n        });\n      }\n    }\n\n    traverseFileTree(item, path) {\n      if (item.isFile) {\n        const toUpload = new UploadFile(path, item);\n        this.files.push(toUpload);\n        this.zone.run(() => {\n          this.popToStack();\n        });\n      } else {\n        this.pushToStack(path);\n        path = path + '/';\n        const dirReader = item.createReader();\n        let entries = [];\n        const thisObj = this;\n\n        const readEntries = () => {\n          thisObj.numOfActiveReadEntries++;\n          dirReader.readEntries(res => {\n            if (!res.length) {\n              // add empty folders\n              if (entries.length === 0) {\n                const toUpload = new UploadFile(path, item);\n                thisObj.zone.run(() => {\n                  thisObj.addToQueue(toUpload);\n                });\n              } else {\n                for (let i = 0; i < entries.length; i++) {\n                  thisObj.zone.run(() => {\n                    thisObj.traverseFileTree(entries[i], path + entries[i].name);\n                  });\n                }\n              }\n\n              thisObj.zone.run(() => {\n                thisObj.popToStack();\n              });\n            } else {\n              // continue with the reading\n              entries = entries.concat(res);\n              readEntries();\n            }\n\n            thisObj.numOfActiveReadEntries--;\n          });\n        };\n\n        readEntries();\n      }\n    }\n\n    addToQueue(item) {\n      this.files.push(item);\n    }\n\n    pushToStack(str) {\n      this.stack.push(str);\n    }\n\n    popToStack() {\n      const value = this.stack.pop();\n    }\n\n    clearQueue() {\n      this.files = [];\n    }\n\n    preventAndStop(event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      this.globalStart();\n      this.globalEnd();\n    }\n\n  }\n\n  FileComponent.ɵfac = function FileComponent_Factory(t) {\n    return new (t || FileComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  FileComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FileComponent,\n    selectors: [[\"file-drop\"]],\n    inputs: {\n      customstyle: \"customstyle\",\n      disableIf: \"disableIf\",\n      captions: \"captions\"\n    },\n    outputs: {\n      onFileDrop: \"onFileDrop\",\n      onFileOver: \"onFileOver\",\n      onFileLeave: \"onFileLeave\"\n    },\n    ngContentSelectors: _c5,\n    decls: 5,\n    vars: 4,\n    consts: [[\"id\", \"dropZone\", 3, \"className\", \"drop\", \"dragover\", \"dragleave\"], [1, \"custom-dropzone\"], [\"ref\", \"\"], [\"class\", \"content\", 4, \"ngIf\"], [1, \"content\"], [1, \"cloud-icon\"], [1, \"content-top-text\"], [1, \"content-center-text\"], [\"type\", \"button\", 1, \"file-browse-button\"]],\n    template: function FileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"drop\", function FileComponent_Template_div_drop_0_listener($event) {\n          return ctx.dropFiles($event);\n        })(\"dragover\", function FileComponent_Template_div_dragover_0_listener($event) {\n          return ctx.onDragOver($event);\n        })(\"dragleave\", function FileComponent_Template_div_dragleave_0_listener($event) {\n          return ctx.onDragLeave($event);\n        });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, FileComponent_div_4_Template, 8, 3, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(2);\n\n        ɵngcc0.ɵɵclassProp(\"over\", ctx.dragoverflag);\n        ɵngcc0.ɵɵproperty(\"className\", ctx.customstyle);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", (_r0.children == null ? null : _r0.children.length) == 0);\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgIf, CloudIconComponent];\n    },\n    styles: [\"[_nghost-%COMP%]{display:block;padding:0 16px;width:100%}#dropZone[_ngcontent-%COMP%]{background:#fff;border:2px dashed #ecf0f1;border-radius:6px;margin:auto;max-width:440px;padding:56px 0}.file-browse-button[_ngcontent-%COMP%]{background:#7f8c8d;border:0;border-radius:6px;color:#fff;cursor:pointer;font-size:14px;font-weight:700;outline:0;padding:12px 18px}.content[_ngcontent-%COMP%]{align-items:center;display:flex;flex-direction:column;justify-content:center}.over[_ngcontent-%COMP%]{background-color:hsla(0,0%,57.6%,.5)}.content-top-text[_ngcontent-%COMP%]{color:#5b5b7b;font-size:18px;font-weight:700}.content-center-text[_ngcontent-%COMP%]{color:#90a0bc;font-size:14px;margin:12px 0}\"]\n  });\n  return FileComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CloudIconComponent = /*#__PURE__*/(() => {\n  class CloudIconComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  CloudIconComponent.ɵfac = function CloudIconComponent_Factory(t) {\n    return new (t || CloudIconComponent)();\n  };\n\n  CloudIconComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CloudIconComponent,\n    selectors: [[\"cloud-icon\"]],\n    decls: 3,\n    vars: 0,\n    consts: [[\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 24 24\", \"width\", \"42px\", \"height\", \"42px\", 1, \"svg-icon\"], [\"d\", \"M0 0h24v24H0z\", \"fill\", \"none\"], [\"d\", \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"]],\n    template: function CloudIconComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵelement(1, \"path\", 1);\n        ɵngcc0.ɵɵelement(2, \"path\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{align-items:center;display:flex;justify-content:center;margin-bottom:.4em}.svg-icon[_ngcontent-%COMP%]{fill:#95a5a6}\"]\n  });\n  return CloudIconComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FileDropModule = /*#__PURE__*/(() => {\n  class FileDropModule {}\n\n  FileDropModule.ɵfac = function FileDropModule_Factory(t) {\n    return new (t || FileDropModule)();\n  };\n\n  FileDropModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FileDropModule,\n    bootstrap: function () {\n      return [FileComponent];\n    }\n  });\n  FileDropModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule]]\n  });\n  return FileDropModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FileDropModule, {\n    declarations: function () {\n      return [FileComponent, CloudIconComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [FileComponent];\n    }\n  });\n})();\n\nlet PreviewLightboxComponent = /*#__PURE__*/(() => {\n  class PreviewLightboxComponent {\n    constructor(sanitizer) {\n      this.sanitizer = sanitizer;\n      this.previewClose = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.getSafeUrl(this.file.file);\n    }\n\n    getSafeUrl(file) {\n      const url = window.URL.createObjectURL(file);\n      this.safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n\n    onClose(event) {\n      this.previewClose.next();\n    }\n\n  }\n\n  PreviewLightboxComponent.ɵfac = function PreviewLightboxComponent_Factory(t) {\n    return new (t || PreviewLightboxComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer));\n  };\n\n  PreviewLightboxComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PreviewLightboxComponent,\n    selectors: [[\"preview-lightbox\"]],\n    inputs: {\n      file: \"file\"\n    },\n    outputs: {\n      previewClose: \"previewClose\"\n    },\n    decls: 6,\n    vars: 4,\n    consts: [[1, \"ng-modal-backdrop\", 3, \"click\"], [1, \"ng-modal-content\"], [1, \"close-icon-wrapper\", 3, \"click\"], [1, \"lightbox-item\"], [3, \"src\", \"ngStyle\", \"load\"]],\n    template: function PreviewLightboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function PreviewLightboxComponent_Template_div_click_0_listener($event) {\n          return ctx.onClose($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function PreviewLightboxComponent_Template_div_click_2_listener($event) {\n          return ctx.onClose($event);\n        });\n        ɵngcc0.ɵɵelement(3, \"close-icon\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(5, \"img\", 4);\n        ɵngcc0.ɵɵlistener(\"load\", function PreviewLightboxComponent_Template_img_load_5_listener() {\n          return ctx.loaded = true;\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"src\", ctx.safeUrl, ɵngcc0.ɵɵsanitizeUrl)(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(2, _c6, ctx.loaded ? \"visible\" : \"hidden\"));\n      }\n    },\n    directives: [CloseIconComponent, ɵngcc2.NgStyle],\n    styles: [\"[_nghost-%COMP%]{align-items:center;display:flex;flex-direction:column;height:100vh;justify-content:center;overflow:auto;overflow:hidden;width:100vw}.ng-modal-backdrop[_ngcontent-%COMP%], [_nghost-%COMP%]{left:0;position:fixed;top:0;z-index:1040}.ng-modal-backdrop[_ngcontent-%COMP%]{background:rgba(0,0,0,.288);bottom:0;right:0}.ng-modal-content[_ngcontent-%COMP%]{align-items:center;color:rgba(0,0,0,.87);display:flex;justify-content:center;z-index:1041}.ng-modal-content[_ngcontent-%COMP%]   .close-icon-wrapper[_ngcontent-%COMP%]{font-size:20px;position:absolute;right:20px;top:20px}.ng-modal-content[_ngcontent-%COMP%]   .lightbox-item[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{-o-object-fit:contain;-webkit-animation-duration:.2s;-webkit-animation-name:zoomIn;animation-duration:.2s;animation-name:zoomIn;height:auto;max-height:calc(100vh - 30px);max-width:calc(100vw - 30px);object-fit:contain;width:100%}@-webkit-keyframes zoomIn{0%{opacity:0;transform:scale3d(.9,.9,.9)}50%{opacity:1}}@keyframes zoomIn{0%{opacity:0;transform:scale3d(.9,.9,.9)}50%{opacity:1}}\"]\n  });\n  return PreviewLightboxComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet RefreshIconComponent = /*#__PURE__*/(() => {\n  class RefreshIconComponent {}\n\n  RefreshIconComponent.ɵfac = function RefreshIconComponent_Factory(t) {\n    return new (t || RefreshIconComponent)();\n  };\n\n  RefreshIconComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RefreshIconComponent,\n    selectors: [[\"refresh-icon\"]],\n    decls: 3,\n    vars: 0,\n    consts: [[\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 24 24\", \"width\", \"18px\", \"height\", \"18px\"], [\"d\", \"M0 0h24v24H0z\", \"fill\", \"none\"], [\"d\", \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"]],\n    template: function RefreshIconComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵelement(1, \"path\", 1);\n        ɵngcc0.ɵɵelement(2, \"path\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    styles: [_c7]\n  });\n  return RefreshIconComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FilePickerModule = /*#__PURE__*/(() => {\n  class FilePickerModule {}\n\n  FilePickerModule.ɵfac = function FilePickerModule_Factory(t) {\n    return new (t || FilePickerModule)();\n  };\n\n  FilePickerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FilePickerModule\n  });\n  FilePickerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [FilePickerService],\n    imports: [[CommonModule, FileDropModule]]\n  });\n  return FilePickerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FilePickerModule, {\n    declarations: function () {\n      return [FilePickerComponent, FilePreviewContainerComponent, FilePreviewItemComponent, PreviewLightboxComponent, RefreshIconComponent, CloseIconComponent];\n    },\n    imports: function () {\n      return [CommonModule, FileDropModule];\n    },\n    exports: function () {\n      return [FilePickerComponent];\n    }\n  });\n})();\n/*\r\n * Public API Surface of file-picker\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { FilePickerAdapter, FilePickerComponent, FilePickerModule, FilePickerService, FileValidationTypes, UploadStatus, FileDropModule as ɵa, FileComponent as ɵb, CloudIconComponent as ɵc, FilePreviewContainerComponent as ɵd, FilePreviewItemComponent as ɵe, PreviewLightboxComponent as ɵf, RefreshIconComponent as ɵg, CloseIconComponent as ɵh }; //# sourceMappingURL=ngx-awesome-uploader.js.map","map":null,"metadata":{},"sourceType":"module"}