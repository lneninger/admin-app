{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/quote/quote.service\";\nexport let QuoteResolveService = /*#__PURE__*/(() => {\n  class QuoteResolveService {\n    constructor(service) {\n      this.service = service;\n    }\n\n    resolve(route, state) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const params = route.params;\n        const itemId = route.paramMap.get('id');\n        const quote = yield this.service.get(itemId).pipe(first()).toPromise();\n        return this.service.setCurrentQuote(quote); // return new Observable(observer => {\n        //   this.actions$\n        //   .pipe(ofActionCompleted(ProcessTelephonyParamsAction), switchMap(_ => {\n        //     debugger;\n        //     return this.store.dispatch(new GetMemberAction(route.paramMap.get('id')));\n        //   }), tap(data => {\n        //     debugger\n        //     observer.next(data);\n        //   }\n        //     ));\n        // });\n      });\n    }\n\n  }\n\n  QuoteResolveService.ɵfac = function QuoteResolveService_Factory(t) {\n    return new (t || QuoteResolveService)(i0.ɵɵinject(i1.QuoteService));\n  };\n\n  QuoteResolveService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuoteResolveService,\n    factory: QuoteResolveService.ɵfac,\n    providedIn: 'root'\n  });\n  return QuoteResolveService;\n})();","map":null,"metadata":{},"sourceType":"module"}