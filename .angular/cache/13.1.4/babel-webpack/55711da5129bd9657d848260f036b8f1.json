{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgxsDataPluginModule } from '@angular-ru/ngxs';\nimport { NGXS_DATA_STORAGE_PLUGIN } from '@angular-ru/ngxs/storage';\nimport { HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\nimport { PERSISTENCE, USE_EMULATOR as USE_AUTH_EMULATOR } from '@angular/fire/auth';\nimport { AngularFirestoreModule, USE_EMULATOR as USE_FIRESTORE_EMULATOR } from '@angular/fire/firestore';\nimport { USE_EMULATOR as USE_FUNCTIONS_EMULATOR } from '@angular/fire/functions';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxStripeModule } from 'ngx-stripe';\nimport { PaymentService } from 'src/app/shared/payment/+services/payment.service';\nimport { ProductCategoryService } from 'src/app/main/services/product-category/product-category.service';\nimport { UserService } from 'src/app/main/services/user/user.service';\nimport { environment } from 'src/environments/environment';\nimport { lazyArrayToObj } from './app-routing-lazy';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AggregatorsState } from './main/services/+state-aggregators/aggregators.state';\nimport { ProductService } from './main/services/product/product.service';\nimport { QuoteService } from './main/services/quote/quote.service';\nimport { SpecialistService } from './main/services/specialist/specialist.service';\nimport { TelephonySessionState, TelephonyState } from './main/services/telephony/states/telephony.state';\nimport { TenantService } from './main/services/tenant/tenant.service';\nimport { AuthService } from './main/services/user/auth.service';\nimport { AppInitializerService, initializerFactory } from './shared/app-initializer/app-initializer.service';\nimport { AppCommonModule } from './shared/common/app-common.module';\nimport { MockerService } from './shared/firebase/mocker.service';\nimport { NoOpMockerService } from './shared/firebase/noop-mocker.service';\nimport { AppConfigState } from './shared/layout/states/appconfig.state';\nimport { LAZY_WIDGETS } from './shared/lazy-loader/tokens';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule, BrowserAnimationsModule, AppRoutingModule, AppCommonModule, AngularFireModule.initializeApp(environment.firebase), AngularFireAnalyticsModule, AngularFirestoreModule, NgxsModule.forRoot([AppConfigState, TenantService, ProductCategoryService, ProductService, AuthService, QuoteService, SpecialistService, UserService, TelephonyState, TelephonySessionState, PaymentService, AggregatorsState], {\n    developmentMode: !environment.production\n  }), // NgxsDataPluginModule.forRoot(),\n  // NgxsStoragePluginModule.forRoot({\n  //   key: [\n  //     AuthService,\n  //     TenantService\n  //   ]\n  // }),\n  NgxsDataPluginModule.forRoot([NGXS_DATA_STORAGE_PLUGIN]), NgxStripeModule.forRoot(environment.stripe.publicKey)],\n  providers: [{\n    provide: APP_INITIALIZER,\n    useFactory: initializerFactory,\n    deps: [AppInitializerService],\n    multi: true\n  }, {\n    provide: LAZY_WIDGETS,\n    useFactory: lazyArrayToObj\n  }, {\n    provide: PERSISTENCE,\n    useValue: 'session'\n  }, {\n    provide: USE_AUTH_EMULATOR,\n    useValue: environment.useEmulators ? ['localhost', 9099] : undefined\n  }, // { provide: USE_DATABASE_EMULATOR, useValue: environment.useEmulators ? ['localhost', 9000] : undefined },\n  {\n    provide: USE_FIRESTORE_EMULATOR,\n    useValue: environment.useEmulators ? ['localhost', 7099] : undefined\n  }, {\n    provide: USE_FUNCTIONS_EMULATOR,\n    useValue: environment.useEmulators ? ['localhost', 6099] : undefined\n  }, {\n    provide: MockerService,\n    useClass: environment.production ? NoOpMockerService : MockerService\n  }],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module"}