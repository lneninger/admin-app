{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { UserLogin } from 'src/app/main/services/user/auth.models';\nimport { MessageSeverity } from 'src/app/shared/common/alert.service';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/common/alert.service\";\nimport * as i2 from \"src/app/main/services/user/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"@angular/material/progress-spinner\";\nconst _c0 = [\"loginForm\"];\n\nfunction LoginComponent_span_2_mat_error_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtemplate(1, LoginComponent_span_2_mat_error_1_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(17);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.dirty && _r3.hasError(\"required\"));\n  }\n}\n\nfunction LoginComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵelementStart(1, \"mat-error\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMessage, \" \");\n  }\n}\n\nfunction LoginComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_error_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter your password \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid password \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction LoginComponent_ng_template_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 23);\n    i0.ɵɵelement(1, \"mat-progress-spinner\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"mode\", \"indeterminate\");\n  }\n}\n\nfunction LoginComponent_ng_template_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Login\");\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(alertService, authService, router) {\n      this.alertService = alertService;\n      this.authService = authService;\n      this.router = router;\n      this.userLogin = new UserLogin(!environment.production ? 'lneninger@hotmail.com' : undefined, !environment.production ? '123123' : undefined);\n      this.isLoading = false;\n      this.formResetToggle = true;\n      this.isModal = false;\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (yield this.authService.isLoggedIn()) {\n          yield this.router.navigate(['/']);\n        }\n      });\n    }\n\n    showErrorAlert(caption, message) {\n      this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n    onSubmit(event) {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.loginForm.valid) {\n          this.authenticating = true;\n          this.errorMessage = undefined;\n\n          try {\n            yield this.authService.login(this.userLogin);\n            yield this.router.navigate(['/']);\n          } catch (error) {\n            console.log('login error: ', error);\n            this.errorMessage = this.formatErrorMessage(error);\n          } finally {\n            this.authenticating = false;\n          }\n        }\n      });\n    }\n\n    formatErrorMessage({\n      message\n    }) {\n      return message;\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    viewQuery: function LoginComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loginForm = _t.first);\n      }\n    },\n    inputs: {\n      isModal: \"isModal\"\n    },\n    decls: 46,\n    vars: 12,\n    consts: [[\"fxLayoutAlign\", \"center center\", 1, \"app-wrapper\", \"bg-gradient-to-b\", \"from-red-600\", \"via-orange-400\", \"to-yellow-300\"], [\"fxFlex.le-sm\", \"50%\", \"fxFlex\", \"30%\", \"fxLayoutGap\", \"30px\", \"fxLayout\", \"column\"], [\"fxLayoutAlign\", \"center center\", 4, \"ngIf\"], [\"fxLayoutAlign\", \"center center\", 1, \"app-title\"], [1, \"text\"], [1, \"max-w-7xl\", 3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"70px\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"20px\"], [\"matPrefix\", \"\"], [\"name\", \"userName\", \"matInput\", \"\", \"type\", \"text\", \"required\", \"\", \"email\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"userName\", \"ngModel\"], [4, \"ngIf\"], [\"name\", \"password\", \"matInput\", \"\", \"type\", \"password\", \"required\", \"\", \"pattern\", \"[A-Za-z0-9._%+-@]{3,}$\", 3, \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [\"fxLayoutAlign\", \"stretch center\", 1, \"flex\"], [\"mat-flat-button\", \"\", \"fxFlexFill\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"flex\", \"justify-center\", 3, \"disabled\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"authenticatingSpinnerTemplate\", \"\"], [\"loginLabelTemplate\", \"\"], [\"routerLink\", \"/signup\", \"fxLayoutAlign\", \"start center\", \"fxLayoutGap\", \"5px\"], [1, \"material-icons\"], [\"fxLayoutAlign\", \"center center\"], [1, \"flex\", \"justify-center\"], [\"diameter\", \"30\", 3, \"mode\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\", 1);\n        i0.ɵɵtemplate(2, LoginComponent_span_2_Template, 2, 1, \"span\", 2);\n        i0.ɵɵtemplate(3, LoginComponent_span_3_Template, 3, 1, \"span\", 2);\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵelementStart(5, \"span\", 4);\n        i0.ɵɵtext(6, \" My HCare \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 5, 6);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener($event) {\n          return ctx.onSubmit($event);\n        });\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"mat-form-field\");\n        i0.ɵɵelementStart(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-icon\", 9);\n        i0.ɵɵtext(15, \"email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 10, 11);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.userLogin.userName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-hint\");\n        i0.ɵɵtext(19, \"User email. If you don't have one, please contact your IT support\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, LoginComponent_mat_error_20_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵtemplate(21, LoginComponent_mat_error_21_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-form-field\");\n        i0.ɵɵelementStart(23, \"mat-label\");\n        i0.ɵɵtext(24, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-icon\", 9);\n        i0.ɵɵtext(26, \"lock\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"input\", 13, 14);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_27_listener($event) {\n          return ctx.userLogin.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"mat-hint\");\n        i0.ɵɵtext(30, \"User password. If you don't remember your password, please contact your IT support\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, LoginComponent_mat_error_31_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵtemplate(32, LoginComponent_mat_error_32_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 15);\n        i0.ɵɵelementStart(34, \"button\", 16);\n        i0.ɵɵtemplate(35, LoginComponent_ng_container_35_Template, 1, 0, \"ng-container\", 17);\n        i0.ɵɵtemplate(36, LoginComponent_ng_template_36_Template, 2, 1, \"ng-template\", null, 18, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(38, LoginComponent_ng_template_38_Template, 1, 0, \"ng-template\", null, 19, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 15);\n        i0.ɵɵelementStart(41, \"a\", 20);\n        i0.ɵɵelementStart(42, \"span\", 21);\n        i0.ɵɵtext(43, \" person_add \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"span\");\n        i0.ɵɵtext(45, \"Signup\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(8);\n\n        const _r3 = i0.ɵɵreference(17);\n\n        const _r6 = i0.ɵɵreference(28);\n\n        const _r10 = i0.ɵɵreference(37);\n\n        const _r12 = i0.ɵɵreference(39);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.validationErrors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.userLogin.userName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", _r3.dirty && _r3.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r3.hasError(\"email\") && !_r3.hasError(\"required\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.userLogin.password);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", _r6.dirty && _r6.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r6.hasError(\"pattern\") && !_r6.hasError(\"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", _r2.invalid || ctx.authenticating);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.authenticating)(\"ngIfThen\", _r10)(\"ngIfElse\", _r12);\n      }\n    },\n    directives: [i4.DefaultLayoutAlignDirective, i5.MatCard, i4.DefaultFlexDirective, i4.DefaultLayoutGapDirective, i4.DefaultLayoutDirective, i6.NgIf, i7.MatError, i8.ɵNgNoValidate, i8.NgControlStatusGroup, i8.NgForm, i7.MatFormField, i7.MatLabel, i9.MatIcon, i7.MatPrefix, i10.MatInput, i8.DefaultValueAccessor, i8.RequiredValidator, i8.EmailValidator, i8.NgControlStatus, i8.NgModel, i7.MatHint, i8.PatternValidator, i11.MatButton, i4.FlexFillDirective, i12.MatProgressSpinner, i3.RouterLinkWithHref],\n    styles: [\"\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}