{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Select } from '@ngxs/store';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { AppConfigState } from '../states/appconfig.state';\nimport { LazyLoaderDirective } from '../../lazy-loader/lazy-loader.module';\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\nimport { LazyLoaderBaseComponent } from '../../lazy-loader/lazy-loader.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./navigation/menu/menu.service\";\nimport * as i2 from \"./../../common/media.service\";\nimport * as i3 from \"@angular/flex-layout\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"./../../lazy-loader/lazy-loader.service\";\nimport * as i6 from \"./toolbar/toolbar.component\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/sidenav\";\nimport * as i9 from \"./navigation/menu/menu.component\";\nimport * as i10 from \"@angular/flex-layout/flex\";\nimport * as i11 from \"../../lazy-loader/lazy-loader.directive\";\nconst _c0 = [\"toolbarOptions\"];\nconst _c1 = [\"drawer\"];\nconst _c2 = [\"drawerOptions\"];\n\nfunction LayoutMainComponent_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.toolbarOptions);\n  }\n}\n\nfunction LayoutMainComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, LayoutMainComponent_ng_template_1_ng_container_0_Template, 1, 1, \"ng-container\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.toolbarOptions);\n  }\n}\n\nfunction LayoutMainComponent_ng_container_12_1_ng_template_0_Template(rf, ctx) {}\n\nfunction LayoutMainComponent_ng_container_12_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, LayoutMainComponent_ng_container_12_1_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n\n  if (rf & 2) {\n    const options_r6 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵproperty(\"appLazy\", options_r6.current);\n  }\n}\n\nfunction LayoutMainComponent_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LayoutMainComponent_ng_container_12_1_Template, 1, 1, undefined, 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const options_r6 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", options_r6.expanded && options_r6.current);\n  }\n}\n\nlet LayoutMainComponent = class LayoutMainComponent extends LazyLoaderBaseComponent {\n  constructor(menuService, mediaService, mediaObserver, router, lazyLoaderService) {\n    super(lazyLoaderService);\n    this.menuService = menuService;\n    this.mediaService = mediaService;\n    this.mediaObserver = mediaObserver;\n    this.router = router;\n    this.lazyLoaderDirectivesInternal$ = new BehaviorSubject(null);\n    this.initializeMedia();\n  }\n\n  set lazyLoaderDirectives(value) {\n    this.lazyLoaderDirectivesInternal = value;\n    const currentDirectives = this.lazyLoaderDirectivesInternal$.value;\n\n    if (this.lazyLoaderDirectivesInternal) {\n      const directiveArray = this.lazyLoaderDirectivesInternal.map(x => x);\n      this.lazyLoaderDirectivesInternal$.next(directiveArray);\n    }\n  }\n\n  get lazyLoaderDirectives() {\n    return this.lazyLoaderDirectivesInternal;\n  }\n\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n\n  ngAfterViewInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.elem = document.documentElement;\n      this.initializeMenuListener();\n      this.initializeOptionsListener();\n    });\n  }\n\n  initializeMenuListener() {\n    this.menu$$ = this.menu$.subscribe(menu => {\n      // debugger;\n      if (menu.show) {\n        this.drawer.open();\n      } else {\n        this.drawer.close();\n      }\n    });\n  }\n\n  initializeOptionsListener() {\n    this.options$$ = this.options$.pipe(switchMap(options => {\n      if (options && options.expanded) {\n        return new Observable(observer => {\n          this.drawerOptions.open().then(() => observer.next(options));\n        });\n      } else {\n        return new Observable(observer => {\n          this.drawerOptions.close().then(() => observer.next(options));\n        });\n      }\n    })).subscribe();\n  }\n\n  initializeMedia() {\n    // debugger;\n    this.mediaService.initialize(this.mediaObserver);\n  }\n\n};\n\nLayoutMainComponent.ɵfac = function LayoutMainComponent_Factory(t) {\n  return new (t || LayoutMainComponent)(i0.ɵɵdirectiveInject(i1.MenuService), i0.ɵɵdirectiveInject(i2.MediaService), i0.ɵɵdirectiveInject(i3.MediaObserver), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.LazyLoaderService));\n};\n\nLayoutMainComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LayoutMainComponent,\n  selectors: [[\"app-layout-main\"]],\n  contentQueries: function LayoutMainComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbarOptions = _t.first);\n    }\n  },\n  viewQuery: function LayoutMainComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 7);\n      i0.ɵɵviewQuery(LazyLoaderDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.drawer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.drawerOptions = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lazyLoaderDirectives = _t);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 14,\n  vars: 3,\n  consts: [[\"toolbarExtraOptions\", \"\"], [\"autosize\", \"\", 1, \"sidenav-container\"], [\"mode\", \"side\", 1, \"example-sidenav\"], [\"drawer\", \"\"], [\"fxFlexFill\", \"\"], [1, \"example-sidenav-content\"], [\"mode\", \"side\", \"position\", \"end\", 1, \"example-sidenav\"], [\"drawerOptions\", \"\"], [\"fxFlex\", \"1 0 200px\", 1, \"m-4\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [3, \"appLazy\"]],\n  template: function LayoutMainComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-toolbar\");\n      i0.ɵɵtemplate(1, LayoutMainComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-drawer-container\", 1);\n      i0.ɵɵelementStart(4, \"mat-drawer\", 2, 3);\n      i0.ɵɵelement(6, \"app-menu\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵelement(8, \"router-outlet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-drawer\", 6, 7);\n      i0.ɵɵelementStart(11, \"section\", 8);\n      i0.ɵɵtemplate(12, LayoutMainComponent_ng_container_12_Template, 2, 1, \"ng-container\", 9);\n      i0.ɵɵpipe(13, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(13, 1, ctx.options$));\n    }\n  },\n  directives: [i6.ToolbarComponent, i7.NgIf, i7.NgTemplateOutlet, i8.MatDrawerContainer, i8.MatDrawer, i9.MenuComponent, i10.FlexFillDirective, i4.RouterOutlet, i10.DefaultFlexDirective, i11.LazyLoaderDirective],\n  pipes: [i7.AsyncPipe],\n  styles: [\"\"],\n  changeDetection: 0\n});\n\n__decorate([Select(AppConfigState.menu)], LayoutMainComponent.prototype, \"menu$\", void 0);\n\n__decorate([Select(AppConfigState.options)], LayoutMainComponent.prototype, \"options$\", void 0);\n\nLayoutMainComponent = __decorate([AutoUnsubscribe()], LayoutMainComponent);\nexport { LayoutMainComponent };","map":null,"metadata":{},"sourceType":"module"}