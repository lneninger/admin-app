{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let ErrorService = /*#__PURE__*/(() => {\n  class ErrorService {\n    constructor(router) {\n      this.router = router;\n    }\n\n    error401(request) {\n      if (typeof request === 'string') {\n        this.data401 = {\n          targetRouteName: request\n        };\n      } else if (request.targetRouteName || request.callRequest) {\n        this.data401 = request;\n      } else if (request.headers) {\n        this.data401 = {\n          targetRouteName: 'Unknown',\n          callRequest: request\n        };\n      }\n\n      this.router.navigate(['error/401'], {\n        state: this.data401\n      });\n    }\n\n    error403(targetRouteName) {\n      this.data403 = {\n        targetRouteName: targetRouteName\n      };\n      this.router.navigate(['error/403']);\n    }\n\n    error404() {\n      this.router.navigate(['error/404']);\n    }\n\n  }\n\n  ErrorService.ɵfac = function ErrorService_Factory(t) {\n    return new (t || ErrorService)(i0.ɵɵinject(i1.Router));\n  };\n\n  ErrorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorService,\n    factory: ErrorService.ɵfac,\n    providedIn: 'root'\n  });\n  return ErrorService;\n})();\nexport class RequestError {}\nexport class Error401State extends RequestError {}\nexport class Error403State extends RequestError {}","map":null,"metadata":{},"sourceType":"module"}