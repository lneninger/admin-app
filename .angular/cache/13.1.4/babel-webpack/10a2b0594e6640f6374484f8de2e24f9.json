{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./upload.service\";\nimport * as i2 from \"ngx-awesome-uploader\";\nexport const adapterDefault = {};\nexport let UploadComponent = /*#__PURE__*/(() => {\n  class UploadComponent {\n    constructor(service) {\n      this.service = service;\n      this.uploadSuccess = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    onUploadSucess($event) {\n      this.uploadSuccess.next($event);\n    }\n\n  }\n\n  UploadComponent.ɵfac = function UploadComponent_Factory(t) {\n    return new (t || UploadComponent)(i0.ɵɵdirectiveInject(i1.UploadService));\n  };\n\n  UploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadComponent,\n    selectors: [[\"app-upload\"]],\n    outputs: {\n      uploadSuccess: \"uploadSuccess\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"adapter\", \"uploadSuccess\"]],\n    template: function UploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ngx-awesome-uploader\", 0);\n        i0.ɵɵlistener(\"uploadSuccess\", function UploadComponent_Template_ngx_awesome_uploader_uploadSuccess_0_listener($event) {\n          return ctx.onUploadSucess($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"adapter\", ctx.service);\n      }\n    },\n    directives: [i2.FilePickerComponent],\n    styles: [\"\"]\n  });\n  return UploadComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}