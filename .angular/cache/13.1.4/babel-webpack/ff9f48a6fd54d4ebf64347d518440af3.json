{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { NavigationItemIds } from 'src/app/main/main.navigation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/layout/layout-main/navigation/breadcrumb/breadcrumb.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/main/services/quote/quote.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../../../../shared/layout/layout-main/layout-main-common/page/page.component\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/datepicker\";\nimport * as i14 from \"@angular/material/button\";\n\nfunction QuoteUpdateComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" (+\", ctx_r0.fakeGrowers.length - 1, \" \", (ctx_r0.fakeGrowers == null ? null : ctx_r0.fakeGrowers.length) === 2 ? \"other\" : \"others\", \") \");\n  }\n}\n\nfunction QuoteUpdateComponent_mat_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const topping_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", topping_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(topping_r3);\n  }\n}\n\nexport let QuoteUpdateComponent = /*#__PURE__*/(() => {\n  class QuoteUpdateComponent {\n    constructor(breadcrumbService, fmBuilder, service, router, route) {\n      this.fmBuilder = fmBuilder;\n      this.service = service;\n      this.router = router;\n      this.route = route;\n      this.form = this.createForm();\n      this.fakeGrowers = [{\n        label: 'Grower1',\n        value: '1'\n      }, {\n        label: 'Grower2',\n        value: '2'\n      }, {\n        label: 'Grower3',\n        value: '3'\n      }, {\n        label: 'Grower4',\n        value: '4'\n      }, {\n        label: 'Grower5',\n        value: '5'\n      }, {\n        label: 'Grower6',\n        value: '6'\n      }, {\n        label: 'Grower7',\n        value: '7'\n      }, {\n        label: 'Grower8',\n        value: '8'\n      }, {\n        label: 'Grower9',\n        value: '9'\n      }]; // debugger;\n\n      breadcrumbService.build(NavigationItemIds.HOME, NavigationItemIds.QUOTES, NavigationItemIds.QUOTE_EDIT);\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {});\n    }\n\n    createForm() {\n      return this.fmBuilder.group({\n        description: [],\n        grower: [],\n        activateDate: [new Date(), [Validators.required]]\n      });\n    }\n\n    onSubmit(event) {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.form.valid) {\n          const request = this.form.getRawValue();\n\n          try {\n            const response = yield this.service.update(request).toPromise();\n            this.router.navigate([`app/quotes/${response.id}`]);\n          } catch (error) {}\n        }\n      });\n    }\n\n  }\n\n  QuoteUpdateComponent.ɵfac = function QuoteUpdateComponent_Factory(t) {\n    return new (t || QuoteUpdateComponent)(i0.ɵɵdirectiveInject(i1.BreadcrumbService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.QuoteService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n\n  QuoteUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuoteUpdateComponent,\n    selectors: [[\"app-quote-update\"]],\n    decls: 77,\n    vars: 6,\n    consts: [[\"title\", \"Edit Quote\"], [\"fxFlex\", \"100%\", \"fxLayout\", \"row wrap\"], [\"fxFlex\", \"100%\", 3, \"formGroup\", \"ngSubmit\"], [\"fxFlex\", \"\", 1, \"dashboard-tile\"], [\"fxLayoutGap\", \"20px\", \"fxLayout\", \"row wrap\"], [\"fxFlex\", \"25%\"], [\"formControlName\", \"description\", \"matInput\", \"\", \"type\", \"text\"], [\"formControlName\", \"grower\", \"multiple\", \"\"], [\"class\", \"example-additional-selection\", 4, \"ngIf\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"activateDate\", \"matInput\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"pickerActivateDate\", \"\"], [\"mat-button\", \"\"], [\"mat-button\", \"\", \"type\", \"submit\"], [1, \"example-additional-selection\"], [3, \"value\"]],\n    template: function QuoteUpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-page\", 0);\n        i0.ɵɵelementStart(1, \"section\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function QuoteUpdateComponent_Template_form_ngSubmit_2_listener($event) {\n          return ctx.onSubmit($event);\n        });\n        i0.ɵɵelementStart(3, \"mat-card\", 3);\n        i0.ɵɵelementStart(4, \"mat-card-content\", 4);\n        i0.ɵɵelementStart(5, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Grower\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-select\", 7);\n        i0.ɵɵelementStart(13, \"mat-select-trigger\");\n        i0.ɵɵtext(14);\n        i0.ɵɵtemplate(15, QuoteUpdateComponent_span_15_Template, 2, 2, \"span\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, QuoteUpdateComponent_mat_option_16_Template, 2, 2, \"mat-option\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(26, \"mat-label\");\n        i0.ɵɵtext(27, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(30, \"mat-label\");\n        i0.ɵɵtext(31, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(34, \"mat-label\");\n        i0.ɵɵtext(35, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(38, \"mat-label\");\n        i0.ɵɵtext(39, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(42, \"mat-label\");\n        i0.ɵɵtext(43, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(46, \"mat-label\");\n        i0.ɵɵtext(47, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(48, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(50, \"mat-label\");\n        i0.ɵɵtext(51, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(52, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(54, \"mat-label\");\n        i0.ɵɵtext(55, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(56, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(58, \"mat-label\");\n        i0.ɵɵtext(59, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(60, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(62, \"mat-label\");\n        i0.ɵɵtext(63, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(64, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"mat-form-field\");\n        i0.ɵɵelementStart(66, \"mat-label\");\n        i0.ɵɵtext(67, \"Activate date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(68, \"input\", 10);\n        i0.ɵɵelement(69, \"mat-datepicker-toggle\", 11);\n        i0.ɵɵelement(70, \"mat-datepicker\", null, 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"mat-card-actions\");\n        i0.ɵɵelementStart(73, \"button\", 13);\n        i0.ɵɵtext(74, \"CANCEL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(75, \"button\", 14);\n        i0.ɵɵtext(76, \"OK\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(71);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate1(\" \", ctx.fakeGrowers ? ctx.fakeGrowers[0] : \"\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.fakeGrowers == null ? null : ctx.fakeGrowers.length) > 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.fakeGrowers);\n        i0.ɵɵadvance(52);\n        i0.ɵɵproperty(\"matDatepicker\", _r2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r2);\n      }\n    },\n    directives: [i5.PageComponent, i6.DefaultFlexDirective, i6.DefaultLayoutDirective, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i7.MatCard, i7.MatCardContent, i6.DefaultLayoutGapDirective, i8.MatFormField, i8.MatLabel, i2.DefaultValueAccessor, i9.MatInput, i2.NgControlStatus, i2.FormControlName, i10.MatSelect, i10.MatSelectTrigger, i11.NgIf, i11.NgForOf, i12.MatOption, i13.MatDatepickerInput, i13.MatDatepickerToggle, i8.MatSuffix, i13.MatDatepicker, i7.MatCardActions, i14.MatButton],\n    styles: [\"\"]\n  });\n  return QuoteUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}