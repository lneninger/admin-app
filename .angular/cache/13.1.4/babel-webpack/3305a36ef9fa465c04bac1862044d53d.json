{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Select } from '@ngxs/store';\nimport { UserService } from 'src/app/main/services/user/user.service';\nimport { TenantService } from '../../services/tenant/tenant.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngxs/store\";\nimport * as i2 from \"../../services/tenant/tenant.service\";\nimport * as i3 from \"src/app/main/services/user/user.service\";\nimport * as i4 from \"src/app/shared/firebase/firebase.service\";\nimport * as i5 from \"../../../shared/layout/layout-main/options/options-wrapper/options-wrapper.component\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"../../shared/security/logout/logout.component\";\n\nfunction AppSettingsComponent_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tenant_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", tenant_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tenant_r2.tenantName);\n  }\n}\n\nfunction AppSettingsComponent_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const role_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r3.name);\n  }\n}\n\nconst globalRoles = [{\n  id: 1,\n  name: 'Screener'\n}, {\n  id: 2,\n  name: 'Advocate'\n}, {\n  id: 3,\n  name: 'Quality Assurance'\n}, {\n  id: 4,\n  name: 'Admin'\n}];\nexport class AppSettingsComponent {\n  constructor(store, tenantService, userService, firebaseService) {\n    this.store = store;\n    this.tenantService = tenantService;\n    this.userService = userService;\n    this.firebaseService = firebaseService;\n    this.selectedTenants = [];\n    this.globalRoles = globalRoles;\n  }\n\n  get defaultTenants() {\n    return this.store.selectSnapshot(TenantService.defaultTenants);\n  }\n\n  set defaultTenants(value) {\n    this.tenantService.setDefaultTenants(value);\n  }\n\n  get userCurrentRole() {\n    return this.store.selectSnapshot(UserService.currentRole);\n  }\n\n  set userCurrentRole(value) {\n    this.userService.setCurentRole(value);\n  }\n\n  ngOnInit() {// debugger;\n  }\n\n}\n\nAppSettingsComponent.ɵfac = function AppSettingsComponent_Factory(t) {\n  return new (t || AppSettingsComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.TenantService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.FirebaseService));\n};\n\nAppSettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppSettingsComponent,\n  selectors: [[\"app-app-settings\"]],\n  decls: 15,\n  vars: 8,\n  consts: [[\"title\", \"Settings\"], [1, \"flex\", \"flex-col\"], [\"appearance\", \"fill\", 1, \"mb-4\"], [\"multiple\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\"]],\n  template: function AppSettingsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-options-wrapper\", 0);\n      i0.ɵɵelementStart(1, \"p\", 1);\n      i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Default Tenants\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-select\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AppSettingsComponent_Template_mat_select_ngModelChange_5_listener($event) {\n        return ctx.defaultTenants = $event;\n      });\n      i0.ɵɵtemplate(6, AppSettingsComponent_mat_option_6_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(9, \"mat-label\");\n      i0.ɵɵtext(10, \"User Role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-select\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AppSettingsComponent_Template_mat_select_ngModelChange_11_listener($event) {\n        return ctx.userCurrentRole = $event;\n      });\n      i0.ɵɵtemplate(12, AppSettingsComponent_mat_option_12_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(13, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"app-logout\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.defaultTenants);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 4, ctx.globalTenants$));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.userCurrentRole);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(13, 6, ctx.userRoles$));\n    }\n  },\n  directives: [i5.OptionsWrapperComponent, i6.MatFormField, i6.MatLabel, i7.MatSelect, i8.NgControlStatus, i8.NgModel, i9.NgForOf, i10.MatOption, i11.LogoutComponent],\n  pipes: [i9.AsyncPipe],\n  styles: [\"\"]\n});\n\n__decorate([Select(TenantService.globalTenants)], AppSettingsComponent.prototype, \"globalTenants$\", void 0);\n\n__decorate([Select(UserService.userRoles)], AppSettingsComponent.prototype, \"userRoles$\", void 0);","map":null,"metadata":{},"sourceType":"module"}