{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { first, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/main/services/product/product.service\";\nimport * as i3 from \"src/app/main/services/product-category/product-category.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/flex-layout/flex\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/tree\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/menu\";\n\nfunction ProductComponent_mat_tree_node_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-tree-node\", 18);\n    i0.ɵɵelementStart(1, \"li\", 19);\n    i0.ɵɵelement(2, \"button\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function ProductComponent_mat_tree_node_20_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const node_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.setCurrentCategory(node_r3);\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"more_vert\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const node_r3 = ctx.$implicit;\n    i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(23);\n\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", node_r3.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r2);\n  }\n}\n\nfunction ProductComponent_mat_nested_tree_node_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-nested-tree-node\");\n    i0.ɵɵelementStart(1, \"li\");\n    i0.ɵɵelementStart(2, \"div\", 19);\n    i0.ɵɵelementStart(3, \"button\", 22);\n    i0.ɵɵelementStart(4, \"mat-icon\", 23);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 24);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function ProductComponent_mat_nested_tree_node_21_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const node_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.setCurrentCategory(node_r6);\n    });\n    i0.ɵɵelementStart(9, \"mat-icon\");\n    i0.ɵɵtext(10, \"more_vert\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"ul\");\n    i0.ɵɵelementContainer(12, 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const node_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(23);\n\n    i0.ɵɵadvance(3);\n    i0.ɵɵattribute(\"aria-label\", \"Toggle \" + node_r6.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.categoryTreeControl.isExpanded(node_r6) ? \"expand_more\" : \"chevron_right\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(node_r6.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassProp(\"tree-invisible\", !ctx_r1.categoryTreeControl.isExpanded(node_r6));\n  }\n}\n\nexport let ProductComponent = /*#__PURE__*/(() => {\n  class ProductComponent {\n    //#endregion\n    constructor(fmBuilder, service, categoryService, data, dialogRef) {\n      this.fmBuilder = fmBuilder;\n      this.service = service;\n      this.categoryService = categoryService;\n      this.data = data;\n      this.dialogRef = dialogRef;\n      this.tagInputControl = new FormControl(); //#region  Product Tags\n\n      this.productTags = this.service.productTags;\n      this.separatorKeysCodes = [ENTER, COMMA];\n      this.categoryTreeControl = new NestedTreeControl(node => node.children);\n      this.categoryTreeDataSource = new MatTreeNestedDataSource();\n\n      this.hasChild = (_, node) => node.children && node.children.length > 0; // debugger;\n\n\n      this.item = data.item;\n      this.parent = data.parent;\n    }\n\n    get tagFormControl() {\n      return this.form.get('tags');\n    }\n\n    get tagsRaw() {\n      return this.form.get('tags').value || '';\n    }\n\n    set tagsRaw(value) {\n      this.tagFormControl.setValue(value);\n    }\n\n    ngOnInit() {\n      this.retrieveData().pipe(first()).subscribe();\n      this.form = this.createForm();\n    }\n\n    createForm() {\n      return this.fmBuilder.group({\n        name: [this.item && this.item.name, [Validators.required]],\n        description: [this.item && this.item.description],\n        price: [this.item && this.item.price],\n        parentId: [this.parent && this.parent.id],\n        tags: [this.item && this.parent.tags]\n      });\n    }\n\n    retrieveData() {\n      // debugger;\n      const result = this.categoryService.getAll().pipe(tap(response => {\n        // debugger;\n        this.categoryDataResponse = response;\n        this.categoryTreeDataSource.data = this.categoryService.formatTreeData([...response], null);\n        this.categoryTreeControl.dataNodes = this.categoryTreeDataSource.data;\n      }));\n      return result;\n    }\n\n    onSubmit(event) {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.form.valid) {\n          const request = this.form.getRawValue();\n\n          try {\n            yield this.service.add(request);\n          } catch (error) {}\n\n          this.dialogRef.close();\n        }\n      });\n    } //#region Tree\n\n\n    expandNode(match) {\n      if (match) {\n        let current = match;\n\n        while (current) {// Leonardo: this.categoryTreeControl.expand(current);\n          // Leonardo: this.currentCategory = this.categoryDataResponse.find(item => item.children.some(child => child == current));\n        }\n      }\n    }\n\n    setCurrentCategory(item) {\n      item = item || this.currentCategory;\n      this.currentCategory = item;\n    }\n\n    setCurrentProduct(item) {\n      this.currentProduct = item;\n    }\n\n    deleteCurrentProduct() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.service.delete(this.currentProduct.id); // await this.retrieveData().toPromise();\n      });\n    } //#endregion\n\n\n  }\n\n  ProductComponent.ɵfac = function ProductComponent_Factory(t) {\n    return new (t || ProductComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i3.ProductCategoryService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i4.MatDialogRef));\n  };\n\n  ProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductComponent,\n    selectors: [[\"app-product\"]],\n    decls: 35,\n    vars: 5,\n    consts: [[\"mat-dialog-title\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mat-typography\"], [\"fxFlex\", \"100%\", \"fxLayout\", \"row wrap\", 1, \"flex\", \"flex-wrap\", \"gap-2\"], [\"fxFlex\", \"100%\"], [\"formControlName\", \"name\", \"matInput\", \"\", \"type\", \"text\"], [\"formControlName\", \"description\", \"matInput\", \"\", \"type\", \"text\"], [\"formControlName\", \"price\", \"matInput\", \"\", \"type\", \"text\"], [\"matSuffix\", \"\"], [1, \"custom-tree\", \"max-h-0.5\", 3, \"dataSource\", \"treeControl\"], [\"matTreeNodePadding\", \"\", 4, \"matTreeNodeDef\"], [4, \"matTreeNodeDef\", \"matTreeNodeDefWhen\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\"], [\"matInput\", \"\", \"disabled\", \"disabled\", \"type\", \"text\", 3, \"value\"], [1, \"flex\", \"justify-between\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\", \"type\", \"submit\"], [\"matTreeNodePadding\", \"\"], [1, \"mat-tree-node\"], [\"mat-icon-button\", \"\", \"disabled\", \"\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Options\", 3, \"matMenuTriggerFor\", \"click\"], [\"mat-icon-button\", \"\", \"matTreeNodeToggle\", \"\"], [1, \"mat-icon-rtl-mirror\"], [\"matTreeNodeToggle\", \"\", 1, \"cursor-pointer\"], [\"matTreeNodeOutlet\", \"\"]],\n    template: function ProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1, \"Product\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ProductComponent_Template_form_ngSubmit_2_listener($event) {\n          return ctx.onSubmit($event);\n        });\n        i0.ɵɵelementStart(3, \"mat-dialog-content\", 2);\n        i0.ɵɵelementStart(4, \"section\", 3);\n        i0.ɵɵelementStart(5, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 7);\n        i0.ɵɵelementStart(17, \"mat-icon\", 8);\n        i0.ɵɵtext(18, \"attach_money\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-tree\", 9);\n        i0.ɵɵtemplate(20, ProductComponent_mat_tree_node_20_Template, 7, 2, \"mat-tree-node\", 10);\n        i0.ɵɵtemplate(21, ProductComponent_mat_nested_tree_node_21_Template, 13, 6, \"mat-nested-tree-node\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-menu\", null, 12);\n        i0.ɵɵelementStart(24, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ProductComponent_Template_button_click_24_listener() {\n          return ctx.setCurrentCategory();\n        });\n        i0.ɵɵtext(25, \"Select\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(27, \"mat-label\");\n        i0.ɵɵtext(28, \"Parent\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-dialog-actions\", 15);\n        i0.ɵɵelementStart(31, \"button\", 16);\n        i0.ɵɵtext(32, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"button\", 17);\n        i0.ɵɵtext(34, \"Ok\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"dataSource\", ctx.categoryTreeDataSource)(\"treeControl\", ctx.categoryTreeControl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"matTreeNodeDefWhen\", ctx.hasChild);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"value\", (ctx.parent == null ? null : ctx.parent.name) || \"root\");\n      }\n    },\n    directives: [i4.MatDialogTitle, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.MatDialogContent, i5.DefaultFlexDirective, i5.DefaultLayoutDirective, i6.MatFormField, i6.MatLabel, i1.DefaultValueAccessor, i7.MatInput, i1.NgControlStatus, i1.FormControlName, i8.MatIcon, i6.MatSuffix, i9.MatTree, i9.MatTreeNodeDef, i9.MatTreeNode, i9.MatTreeNodePadding, i10.MatButton, i11.MatMenuTrigger, i9.MatNestedTreeNode, i9.MatTreeNodeToggle, i9.MatTreeNodeOutlet, i11.MatMenu, i11.MatMenuItem, i4.MatDialogActions, i4.MatDialogClose],\n    styles: [\"\"]\n  });\n  return ProductComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}