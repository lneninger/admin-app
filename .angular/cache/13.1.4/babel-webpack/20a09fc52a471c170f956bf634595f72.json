{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../item/item.component\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\n\nfunction SelectorListComponent_section_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"app-selector-item\", 5);\n    i0.ɵɵlistener(\"editing\", function SelectorListComponent_section_0_ng_container_2_Template_app_selector_item_editing_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return ctx_r3.setEditing($event, item_r2);\n    })(\"identifierChanged\", function SelectorListComponent_section_0_ng_container_2_Template_app_selector_item_identifierChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.identifierChanged($event, item_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"config\", ctx_r1.config)(\"item\", item_r2);\n  }\n}\n\nfunction SelectorListComponent_section_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"section\", 1);\n    i0.ɵɵelementStart(1, \"section\", 2);\n    i0.ɵɵtemplate(2, SelectorListComponent_section_0_ng_container_2_Template, 2, 2, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function SelectorListComponent_section_0_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.newSelector();\n    });\n    i0.ɵɵelementStart(4, \"mat-icon\");\n    i0.ɵɵtext(5, \"add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.currentSelectors);\n  }\n}\n\nexport let SelectorListComponent = /*#__PURE__*/(() => {\n  class SelectorListComponent {\n    constructor() {\n      this.currentSelectors = [];\n    }\n\n    get selectors() {\n      return (this.config.items || []).map(item => ({\n        label: item.label,\n        value: item.identifier\n      }));\n    }\n\n    ngOnInit() {}\n\n    setEditing(editing, item) {\n      editing = editing != null ? editing : true;\n      item.editing = editing;\n\n      if (item.editing == false) {\n        item.isNew = false;\n      }\n    }\n\n    identifierChanged(identifier, item) {}\n\n    newSelector() {\n      const item = {\n        isNew: true,\n        editing: true\n      };\n      this.currentSelectors.push(item);\n    }\n\n  }\n\n  SelectorListComponent.ɵfac = function SelectorListComponent_Factory(t) {\n    return new (t || SelectorListComponent)();\n  };\n\n  SelectorListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectorListComponent,\n    selectors: [[\"app-selector-list\"]],\n    inputs: {\n      config: \"config\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"flex items-center gap-4\", 4, \"ngIf\"], [1, \"flex\", \"items-center\", \"gap-4\"], [1, \"flex\", \"items-center\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-mini-fab\", \"\", \"aria-label\", \"New selector\", \"color\", \"primary\", 1, \"ml-3\", 3, \"click\"], [1, \"flex\", 3, \"config\", \"item\", \"editing\", \"identifierChanged\"]],\n    template: function SelectorListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SelectorListComponent_section_0_Template, 6, 1, \"section\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.config);\n      }\n    },\n    directives: [i1.NgIf, i1.NgForOf, i2.SelectorItemComponent, i3.MatButton, i4.MatIcon],\n    styles: [\"\"]\n  });\n  return SelectorListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}