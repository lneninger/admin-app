{"ast":null,"code":"import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { fromEvent, merge, of } from 'rxjs';\nimport { debounceTime, filter, startWith, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/flex-layout/flex\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/toolbar\";\nimport * as i7 from \"@angular/material/list\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/router\";\nconst _c0 = [\"searchContainer\"];\nconst _c1 = [\"searchInput\"];\n\nfunction ToolbarSearchComponent_mat_icon_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"search\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ToolbarSearchComponent_mat_icon_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"close\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c2 = function () {\n  return [\"/app/dashboard\"];\n};\n\nfunction ToolbarSearchComponent_mat_list_item_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelement(1, \"mat-icon\", 19);\n    i0.ɵɵelementStart(2, \"div\", 20);\n    i0.ɵɵelementStart(3, \"span\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 21);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"a\", 22);\n    i0.ɵɵelementStart(8, \"mat-icon\");\n    i0.ɵɵtext(9, \"search\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r6.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r6.tenant);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c2));\n  }\n}\n\nexport let ToolbarSearchComponent = /*#__PURE__*/(() => {\n  class ToolbarSearchComponent {\n    // dialogRef: MatDialogRef<ToolbarSearchDialogComponent, any>;\n    constructor(dialog) {\n      this.dialog = dialog;\n      this.result = [{\n        id: 1,\n        name: 'John Smitch',\n        tenant: 'UHC'\n      }, {\n        id: 2,\n        name: 'John Smitch',\n        tenant: 'UHC'\n      }, {\n        id: 3,\n        name: 'John Smitch',\n        tenant: 'UHC'\n      }, {\n        id: 4,\n        name: 'John Smitch',\n        tenant: 'UHC'\n      }, {\n        id: 5,\n        name: 'John Smitch',\n        tenant: 'CTC'\n      }, {\n        id: 6,\n        name: 'John Smitch',\n        tenant: 'UHC'\n      }, {\n        id: 7,\n        name: 'John Smitch',\n        tenant: 'EBM'\n      }, {\n        id: 8,\n        name: 'John Smitch',\n        tenant: 'UHC'\n      }, {\n        id: 9,\n        name: 'John Smitch',\n        tenant: 'UHC'\n      }, {\n        id: 10,\n        name: 'John Smitch',\n        tenant: 'ETC'\n      }];\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      this.initializeSearchListener();\n    }\n\n    click() {\n      this.clickInside = true;\n    }\n\n    clickout(event) {\n      // debugger;\n      if (!this.clickInside) {\n        // debugger;\n        this.showSearch = false;\n        this.showSearchResultDialog = false;\n      }\n\n      this.clickInside = false;\n    }\n\n    toggleSearch() {\n      this.showSearch = !this.showSearch;\n\n      if (!this.showSearch) {\n        this.showSearchResultDialog = false;\n      }\n    }\n\n    captureDoneEvent(event) {\n      if (event.toState === 'open') {\n        // debugger;\n        this.searchInput.nativeElement.focus();\n      }\n    }\n\n    initializeSearchListener() {\n      const inputEvent = fromEvent(this.searchInput.nativeElement, 'input');\n      const deleteEvent = fromEvent(this.searchInput.nativeElement, 'keyup').pipe(startWith(null), filter(event => {\n        return ['Backspace', 'Delete'].some(key => !event || event.key === key);\n      }));\n      const showResultDialog = merge(inputEvent, deleteEvent).subscribe(result => {\n        if (result != null) {\n          // debugger;\n          this.showSearchResultDialog = true;\n        }\n      });\n      const event$ = merge(inputEvent, deleteEvent).pipe(startWith(null), filter(_ => {\n        return !this.searchInput.nativeElement.value || this.searchInput.nativeElement.value.trim().length === 0 || this.searchInput.nativeElement.value.length > 2;\n      }), debounceTime(200), switchMap(_ => {\n        return this.search();\n      })).subscribe(result => {});\n    }\n\n    search() {\n      return of(this.result);\n    }\n\n  }\n\n  ToolbarSearchComponent.ɵfac = function ToolbarSearchComponent_Factory(t) {\n    return new (t || ToolbarSearchComponent)(i0.ɵɵdirectiveInject(i1.MatDialog));\n  };\n\n  ToolbarSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ToolbarSearchComponent,\n    selectors: [[\"app-toolbar-search\"]],\n    viewQuery: function ToolbarSearchComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchInput = _t.first);\n      }\n    },\n    hostBindings: function ToolbarSearchComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function ToolbarSearchComponent_click_HostBindingHandler() {\n          return ctx.click();\n        })(\"click\", function ToolbarSearchComponent_click_HostBindingHandler($event) {\n          return ctx.clickout($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    decls: 26,\n    vars: 5,\n    consts: [[\"fxLayout\", \"row\", \"fxLayoutAlign\", \"end center\"], [\"searchContainer\", \"\"], [1, \"searchFields\"], [\"fxFlex\", \"\", \"placeholder\", \"Search...\", \"autocomplete\", \"off\", 1, \"px-4\", \"text-blue-800\", 3, \"keyup.enter\"], [\"searchInput\", \"\"], [\"mat-icon-button\", \"\", 1, \"submitButton\", 3, \"click\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Search member\", 3, \"click\"], [4, \"ngIf\"], [1, \"rounded-xl\", \"overflow-hidden\", \"bg-gray-300\", \"border\", \"border-gray-600\", 2, \"position\", \"absolute\", \"z-index\", \"10000\", \"width\", \"100%\", \"top\", \"70px\"], [\"color\", \"primary\"], [1, \"example-spacer\"], [\"fxLayoutGap\", \"20px\"], [\"mat-mini-fab\", \"\", \"color\", \"primary\", \"aria-label\", \"Full Screen\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-expand\"], [\"mat-mini-fab\", \"\", \"color\", \"primary\", \"aria-label\", \"Example icon button with a menu icon\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-filter\"], [1, \"m-8\"], [\"shoes\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"matListAvatar\", \"\", \"fontSet\", \"fas\", \"fontIcon\", \"fa-user-circle\"], [\"mat-line\", \"\", \"fxFlex\", \"100%\"], [\"fxFlex\", \"\"], [\"fxFlex\", \"64px\", 3, \"routerLink\"]],\n    template: function ToolbarSearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0, 1);\n        i0.ɵɵelementStart(2, \"section\", 2);\n        i0.ɵɵlistener(\"@searchToggle.done\", function ToolbarSearchComponent_Template_section_animation_searchToggle_done_2_listener($event) {\n          return ctx.captureDoneEvent($event);\n        });\n        i0.ɵɵelementStart(3, \"input\", 3, 4);\n        i0.ɵɵlistener(\"keyup.enter\", function ToolbarSearchComponent_Template_input_keyup_enter_3_listener() {\n          return ctx.search();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function ToolbarSearchComponent_Template_button_click_5_listener() {\n          return ctx.search();\n        });\n        i0.ɵɵelementStart(6, \"mat-icon\");\n        i0.ɵɵtext(7, \"search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ToolbarSearchComponent_Template_button_click_8_listener() {\n          return ctx.toggleSearch();\n        });\n        i0.ɵɵtemplate(9, ToolbarSearchComponent_mat_icon_9_Template, 2, 0, \"mat-icon\", 7);\n        i0.ɵɵtemplate(10, ToolbarSearchComponent_mat_icon_10_Template, 2, 0, \"mat-icon\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"section\", 8);\n        i0.ɵɵelementStart(12, \"mat-toolbar\", 9);\n        i0.ɵɵelementStart(13, \"mat-toolbar-row\");\n        i0.ɵɵelementStart(14, \"span\");\n        i0.ɵɵtext(15, \"Result\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"span\", 10);\n        i0.ɵɵelementStart(17, \"section\", 11);\n        i0.ɵɵelementStart(18, \"button\", 12);\n        i0.ɵɵelement(19, \"mat-icon\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 14);\n        i0.ɵɵelement(21, \"mat-icon\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 16);\n        i0.ɵɵelementStart(23, \"mat-list\", null, 17);\n        i0.ɵɵtemplate(25, ToolbarSearchComponent_mat_list_item_25_Template, 10, 4, \"mat-list-item\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"@searchToggle\", ctx.showSearch ? \"open\" : \"close\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showSearch);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSearch);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"@searchToggle\", ctx.showSearchResultDialog ? \"open-searchresult\" : \"close-searchresult\");\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.result);\n      }\n    },\n    directives: [i2.DefaultLayoutDirective, i2.DefaultLayoutAlignDirective, i2.DefaultFlexDirective, i3.MatButton, i4.MatIcon, i5.NgIf, i6.MatToolbar, i6.MatToolbarRow, i2.DefaultLayoutGapDirective, i7.MatList, i5.NgForOf, i7.MatListItem, i7.MatListAvatarCssMatStyler, i8.MatLine, i9.RouterLinkWithHref],\n    styles: [\"[_nghost-%COMP%]{position:relative}[_nghost-%COMP%]     * .searchFields{overflow:hidden}\"],\n    data: {\n      animation: [trigger('searchToggle', [state('open', style({\n        width: '100%',\n        padding: '1rem'\n      })), state('close', style({\n        width: '0px'\n      })), state('open-searchresult', style({\n        display: 'block'\n      })), state('close-searchresult', style({\n        height: '0px',\n        display: 'none'\n      })), transition('void => close', [animate('0s')]), transition('* => close', [animate('0.2s')]), transition('* => open', [animate('0.5s')])])]\n    }\n  });\n  return ToolbarSearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}