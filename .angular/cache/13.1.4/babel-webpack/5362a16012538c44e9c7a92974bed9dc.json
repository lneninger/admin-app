{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\nimport { NavigationItemIds } from 'src/app/main/main.navigation';\nimport { BaseComponent } from 'src/app/shared/base.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/layout/layout-main/navigation/breadcrumb/breadcrumb.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../services/quote/quote.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../../../../shared/layout/layout-main/layout-main-common/page/page.component\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/datepicker\";\nimport * as i11 from \"@angular/material/button\";\nlet QuoteSettingsComponent = class QuoteSettingsComponent extends BaseComponent {\n  constructor(breadcrumbService, fmBuilder, service, router, route) {\n    super();\n    this.fmBuilder = fmBuilder;\n    this.service = service;\n    this.router = router;\n    this.route = route;\n    this.form = this.createForm();\n    breadcrumbService.build(NavigationItemIds.HOME, NavigationItemIds.QUOTES, NavigationItemIds.QUOTE_NEW);\n  }\n\n  ngOnInit() {}\n\n  createForm() {\n    return this.fmBuilder.group({\n      description: [],\n      activateDate: [new Date(), [Validators.required]]\n    });\n  }\n\n  onSubmit(event) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.form.valid) {\n        const request = this.form.getRawValue();\n\n        try {\n          const response = yield this.service.add(request).toPromise();\n          this.router.navigate([`app/quotes/${response.id}`]);\n        } catch (error) {}\n      }\n    });\n  }\n\n};\n\nQuoteSettingsComponent.ɵfac = function QuoteSettingsComponent_Factory(t) {\n  return new (t || QuoteSettingsComponent)(i0.ɵɵdirectiveInject(i1.BreadcrumbService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.QuoteService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\n\nQuoteSettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuoteSettingsComponent,\n  selectors: [[\"app-quote-new\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 21,\n  vars: 3,\n  consts: [[\"title\", \"New Quote\"], [\"fxFlex\", \"100%\", \"fxLayout\", \"row wrap\"], [\"fxFlex\", \"100%\", 3, \"formGroup\", \"ngSubmit\"], [\"fxFlex\", \"\", 1, \"dashboard-tile\"], [\"fxLayoutGap\", \"20px\"], [\"fxFlex\", \"25%\"], [\"formControlName\", \"description\", \"matInput\", \"\", \"type\", \"text\"], [\"formControlName\", \"activateDate\", \"matInput\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"pickerActivateDate\", \"\"], [\"mat-button\", \"\"], [\"mat-button\", \"\", \"type\", \"submit\"]],\n  template: function QuoteSettingsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-page\", 0);\n      i0.ɵɵelementStart(1, \"section\", 1);\n      i0.ɵɵelementStart(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function QuoteSettingsComponent_Template_form_ngSubmit_2_listener($event) {\n        return ctx.onSubmit($event);\n      });\n      i0.ɵɵelementStart(3, \"mat-card\", 3);\n      i0.ɵɵelementStart(4, \"mat-card-content\", 4);\n      i0.ɵɵelementStart(5, \"mat-form-field\", 5);\n      i0.ɵɵelementStart(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-form-field\");\n      i0.ɵɵelementStart(10, \"mat-label\");\n      i0.ɵɵtext(11, \"Activate date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelement(13, \"mat-datepicker-toggle\", 8);\n      i0.ɵɵelement(14, \"mat-datepicker\", null, 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-card-actions\");\n      i0.ɵɵelementStart(17, \"button\", 10);\n      i0.ɵɵtext(18, \"CANCEL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 11);\n      i0.ɵɵtext(20, \"OK\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(15);\n\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"matDatepicker\", _r0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"for\", _r0);\n    }\n  },\n  directives: [i5.PageComponent, i6.DefaultFlexDirective, i6.DefaultLayoutDirective, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i7.MatCard, i7.MatCardContent, i6.DefaultLayoutGapDirective, i8.MatFormField, i8.MatLabel, i2.DefaultValueAccessor, i9.MatInput, i2.NgControlStatus, i2.FormControlName, i10.MatDatepickerInput, i10.MatDatepickerToggle, i8.MatSuffix, i10.MatDatepicker, i7.MatCardActions, i11.MatButton],\n  styles: [\"\"]\n});\nQuoteSettingsComponent = __decorate([AutoUnsubscribe()], QuoteSettingsComponent);\nexport { QuoteSettingsComponent };","map":null,"metadata":{},"sourceType":"module"}