{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../layout-main.service\";\nimport * as i2 from \"../navigation/menu/menu.service\";\nimport * as i3 from \"../options/app-options.service\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"../navigation/breadcrumb/breadcrumb.component\";\nimport * as i8 from \"./toolbar-search/toolbar-search.component\";\nimport * as i9 from \"@angular/flex-layout/flex\";\nimport * as i10 from \"@angular/common\";\nconst _c0 = [\"toolbarExtraOptions\"];\n\nfunction ToolbarComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.toolbarExtraOptions);\n  }\n}\n\nfunction ToolbarComponent_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ToolbarComponent_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.toggleFullscreen();\n    });\n    i0.ɵɵelement(1, \"mat-icon\", 12);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ToolbarComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ToolbarComponent_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.toggleFullscreen();\n    });\n    i0.ɵɵelement(1, \"mat-icon\", 14);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ToolbarComponent = /*#__PURE__*/(() => {\n  class ToolbarComponent {\n    constructor(layoutMainService, menuService, optionsService) {\n      this.layoutMainService = layoutMainService;\n      this.menuService = menuService;\n      this.optionsService = optionsService;\n      this.appTitle = environment.appTitle;\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log(`appTitle -> ${this.appTitle}`);\n      });\n    }\n\n    toggleFullscreen() {\n      // debugger;\n      if (this.layoutMainService.fullScreen) {\n        this.closeFullscreen();\n      } else {\n        this.openFullscreen();\n      }\n    }\n\n    openFullscreen() {\n      this.layoutMainService.openFullscreen();\n    }\n    /* Close fullscreen */\n\n\n    closeFullscreen() {\n      this.layoutMainService.closeFullscreen();\n    }\n\n  }\n\n  ToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) {\n    return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(i1.LayoutMainService), i0.ɵɵdirectiveInject(i2.MenuService), i0.ɵɵdirectiveInject(i3.AppOptionsService));\n  };\n\n  ToolbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ToolbarComponent,\n    selectors: [[\"app-toolbar\"]],\n    contentQueries: function ToolbarComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbarExtraOptions = _t.first);\n      }\n    },\n    decls: 15,\n    vars: 4,\n    consts: [[\"color\", \"primary\", 1, \"main-toolbar\"], [1, \"flex\", \"app-title\", \"mr-2\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with menu icon\", 1, \"sidenav-icon-toggle\", 3, \"click\"], [1, \"flex\", \"flex-row\", \"flex-no-wrap\", \"ml-10\"], [1, \"example-spacer\"], [\"fxFlex\", \"1 0 20%\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with heart icon\", 1, \"example-icon\", \"favorite-icon\", 3, \"click\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Full Screen\", 3, \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Normal Window\", 3, \"click\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Full Screen\", 3, \"click\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-expand\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Normal Window\", 3, \"click\"], [\"fontSet\", \"fas\", \"fontIcon\", \"fa-compress\"]],\n    template: function ToolbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ToolbarComponent_Template_button_click_3_listener() {\n          return ctx.menuService.toggleMenu();\n        });\n        i0.ɵɵelementStart(4, \"mat-icon\");\n        i0.ɵɵtext(5, \"menu\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"app-breadcrumb\", 3);\n        i0.ɵɵelement(7, \"span\", 4);\n        i0.ɵɵelement(8, \"app-toolbar-search\", 5);\n        i0.ɵɵtemplate(9, ToolbarComponent_ng_container_9_Template, 1, 1, \"ng-container\", 6);\n        i0.ɵɵelementStart(10, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ToolbarComponent_Template_button_click_10_listener() {\n          return ctx.optionsService.toggleOptions(\"settings\");\n        });\n        i0.ɵɵelementStart(11, \"mat-icon\");\n        i0.ɵɵtext(12, \"settings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, ToolbarComponent_button_13_Template, 2, 0, \"button\", 8);\n        i0.ɵɵtemplate(14, ToolbarComponent_button_14_Template, 2, 0, \"button\", 9);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.appTitle, \" \");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.toolbarExtraOptions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.layoutMainService.fullScreen);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.layoutMainService.fullScreen);\n      }\n    },\n    directives: [i4.MatToolbar, i5.MatButton, i6.MatIcon, i7.BreadcrumbComponent, i8.ToolbarSearchComponent, i9.DefaultFlexDirective, i10.NgIf, i10.NgTemplateOutlet],\n    styles: [\"\"]\n  });\n  return ToolbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}