{"ast":null,"code":"var SpecialistService_1;\nimport { __awaiter, __decorate, __param } from \"tslib\";\nimport { DataAction, Payload, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { Selector, State } from '@ngxs/store';\nimport produce from 'immer';\nimport { NgxsBaseDataRepository } from '../+redux/base-redux.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./specialist-endpoint.service\";\nimport * as i2 from \"@ngxs/store\";\nlet SpecialistService = SpecialistService_1 = class SpecialistService extends NgxsBaseDataRepository {\n  constructor(endpoint, store) {\n    super();\n    this.endpoint = endpoint;\n    this.store = store;\n  }\n\n  static currentSpecialist(state) {\n    return state.currentSpecialist;\n  }\n\n  get currentQuote$() {\n    return this.store.select(SpecialistService_1.currentSpecialist);\n  }\n\n  get currentQuote() {\n    return this.store.selectSnapshot(SpecialistService_1.currentSpecialist);\n  }\n\n  search(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.endpoint.search(input);\n    });\n  }\n\n  add(request) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield this.endpoint.add(request);\n    });\n  }\n\n  update(id, request) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield this.endpoint.update(id, request);\n    });\n  }\n\n  get(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield this.endpoint.get(id);\n    });\n  }\n\n  setCurrentSpecialist(input) {\n    this.ctx.setState(produce(this.ctx.getState(), draft => {\n      draft.currentSpecialist = input;\n    }));\n    return this.snapshot.currentSpecialist;\n  }\n\n};\n\nSpecialistService.ɵfac = function SpecialistService_Factory(t) {\n  return new (t || SpecialistService)(i0.ɵɵinject(i1.SpecialistEndpointService), i0.ɵɵinject(i2.Store));\n};\n\nSpecialistService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpecialistService,\n  factory: SpecialistService.ɵfac\n});\n\n__decorate([DataAction(), __param(0, Payload('specialist'))], SpecialistService.prototype, \"setCurrentSpecialist\", null);\n\n__decorate([Selector()], SpecialistService, \"currentSpecialist\", null);\n\nSpecialistService = SpecialistService_1 = __decorate([StateRepository(), State({\n  name: 'specialistState',\n  defaults: {\n    currentSpecialist: null\n  }\n})], SpecialistService);\nexport { SpecialistService };","map":null,"metadata":{},"sourceType":"module"}