{"ast":null,"code":"import { BaseComponent } from './base.component';\nimport { ComponentDisplayMode } from './general.models';\nimport * as i0 from \"@angular/core\";\nexport let HybridDisplayModeComponent = /*#__PURE__*/(() => {\n  class HybridDisplayModeComponent extends BaseComponent {\n    constructor() {\n      super(...arguments);\n      this.displayMode = ComponentDisplayMode.Component;\n    }\n\n    get hostClasses() {\n      return this.isDialog;\n    }\n\n    ngAfterViewInit() {}\n\n  }\n\n  HybridDisplayModeComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵHybridDisplayModeComponent_BaseFactory;\n    return function HybridDisplayModeComponent_Factory(t) {\n      return (ɵHybridDisplayModeComponent_BaseFactory || (ɵHybridDisplayModeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(HybridDisplayModeComponent)))(t || HybridDisplayModeComponent);\n    };\n  }();\n\n  HybridDisplayModeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HybridDisplayModeComponent,\n    selectors: [[\"ng-component\"]],\n    hostVars: 2,\n    hostBindings: function HybridDisplayModeComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"h-max\", ctx.hostClasses);\n      }\n    },\n    inputs: {\n      displayMode: \"displayMode\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function HybridDisplayModeComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return HybridDisplayModeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}