{"ast":null,"code":"import { HttpEventType, HttpHeaders } from '@angular/common/http';\nimport { EventEmitter, InjectionToken } from '@angular/core';\nimport { FilePickerAdapter, UploadStatus } from 'ngx-awesome-uploader';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport const UPLOAD_CONFIG = new InjectionToken('UPLOADCONFIG');\nexport let UploadService = /*#__PURE__*/(() => {\n  class UploadService extends FilePickerAdapter {\n    constructor(http, config) {\n      super();\n      this.http = http;\n      this.onUploadFinished = new EventEmitter();\n      this.config = config || this.generateDefaultConfig();\n    }\n\n    generateDefaultConfig() {\n      return {\n        url: environment.uploadUrl\n      };\n    }\n\n    uploadFile(fileItem) {\n      const url = `${this.config.url}/quote`;\n      const headers = new HttpHeaders().set('enctype', 'multipart/form-data').set('Accept', 'application/json').set('KeepOriginalHeadersKey', 'true'); // .set('Content-Type', undefined);\n      // {\n      //   'enctype': 'multipart/form-data',\n      //   'Accept': 'application/json',\n      //   'Content-Type': undefined,\n      // });\n\n      let formData = new FormData();\n      formData.append('file', fileItem.file); // const req = new HttpRequest(\"POST\", url, formData, { reportProgress: true, responseType: 'json' });\n      // return this.http.request(req).pipe(map(event => {\n\n      return this.http.post(url, formData, {\n        headers,\n        reportProgress: true,\n        observe: 'events',\n        responseType: 'json'\n      }).pipe(map(event => {\n        if (event.type === HttpEventType.UploadProgress) return {\n          body: null,\n          status: UploadStatus.IN_PROGRESS,\n          progress: Math.round(100 * event.loaded / event.total)\n        };else if (event.type === HttpEventType.Response) {\n          this.onUploadFinished.emit(event.body);\n          return {\n            body: event.body,\n            status: UploadStatus.UPLOADED\n          };\n        }\n      }));\n    }\n\n    removeFile(fileItem) {\n      const url = `${this.config.url}`;\n      return this.http.delete(this.config.url);\n    }\n\n  }\n\n  UploadService.ɵfac = function UploadService_Factory(t) {\n    return new (t || UploadService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(UPLOAD_CONFIG, 8));\n  };\n\n  UploadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UploadService,\n    factory: UploadService.ɵfac,\n    providedIn: 'root'\n  });\n  return UploadService;\n})();","map":null,"metadata":{},"sourceType":"module"}