{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { HttpClient } from '@angular/common/http';\nimport { InjectionToken } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport const baseUrl = environment.apiBaseUrl;\nexport const BASE_URL_TOKEN = new InjectionToken(baseUrl);\nexport function initializerFactory(configRetriever) {\n  const promise = configRetriever.getConfiguration(baseUrl).then(value => {\n    console.log(`retrieved configuration => `, value);\n  });\n  return () => promise;\n}\nexport let AppInitializerService = /*#__PURE__*/(() => {\n  class AppInitializerService {\n    constructor(httpHandler) {\n      this.http = new HttpClient(httpHandler);\n    }\n\n    getConfiguration(baseUrl) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const url = `${baseUrl}appConfiguration`;\n        AppInitializerService.configuration = yield this.http.get(url).toPromise();\n      });\n    }\n\n  }\n\n  AppInitializerService.ɵfac = function AppInitializerService_Factory(t) {\n    return new (t || AppInitializerService)(i0.ɵɵinject(i1.HttpBackend));\n  };\n\n  AppInitializerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppInitializerService,\n    factory: AppInitializerService.ɵfac,\n    providedIn: 'root'\n  });\n  return AppInitializerService;\n})();\nexport var PreviewFeatureStatusEnum = /*#__PURE__*/(() => {\n  (function (PreviewFeatureStatusEnum) {\n    PreviewFeatureStatusEnum[\"Show\"] = \"Show\";\n    PreviewFeatureStatusEnum[\"Hide\"] = \"Hide\";\n    PreviewFeatureStatusEnum[\"Disable\"] = \"Disable\";\n  })(PreviewFeatureStatusEnum || (PreviewFeatureStatusEnum = {}));\n\n  return PreviewFeatureStatusEnum;\n})();","map":null,"metadata":{},"sourceType":"module"}