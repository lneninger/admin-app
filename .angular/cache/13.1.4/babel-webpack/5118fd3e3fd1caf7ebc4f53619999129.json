{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/payment/+services/payment.service\";\nimport * as i2 from \"src/app/main/services/user/auth.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"ngx-plaid-link\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\n\nfunction BankAccountComponent_ng_container_1_section_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-card\", 8);\n    i0.ɵɵlistener(\"click\", function BankAccountComponent_ng_container_1_section_3_ng_container_1_Template_mat_card_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const account_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(3);\n      return ctx_r7.selectedAccount = account_r6;\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const account_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", account_r6.name, \" \");\n  }\n}\n\nfunction BankAccountComponent_ng_container_1_section_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 6);\n    i0.ɵɵtemplate(1, BankAccountComponent_ng_container_1_section_3_ng_container_1_Template, 3, 1, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.accountData.metadata.accounts);\n  }\n}\n\nfunction BankAccountComponent_ng_container_1_dl_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"dl\", 9);\n    i0.ɵɵelementStart(1, \"dt\", 10);\n    i0.ɵɵtext(2, \"User:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"dd\", 11);\n    i0.ɵɵtext(4, \"user_good\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"dt\", 12);\n    i0.ɵɵtext(6, \"Password:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"dd\", 11);\n    i0.ɵɵtext(8, \"pass_good\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"dt\", 12);\n    i0.ɵɵtext(10, \"Code:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"dd\", 11);\n    i0.ɵɵtext(12, \"1234\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return [\"US\", \"CA\", \"GB\"];\n};\n\nfunction BankAccountComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 3);\n    i0.ɵɵlistener(\"Success\", function BankAccountComponent_ng_container_1_Template_button_Success_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onPlaidSuccess($event);\n    })(\"Exit\", function BankAccountComponent_ng_container_1_Template_button_Exit_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onPlaidExit($event);\n    })(\"Load\", function BankAccountComponent_ng_container_1_Template_button_Load_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onPlaidLoad($event);\n    })(\"Event\", function BankAccountComponent_ng_container_1_Template_button_Event_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onPlaidEvent($event);\n    })(\"Click\", function BankAccountComponent_ng_container_1_Template_button_Click_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.onPlaidClick($event);\n    });\n    i0.ɵɵtext(2, \"Link Your Bank Account\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, BankAccountComponent_ng_container_1_section_3_Template, 2, 1, \"section\", 4);\n    i0.ɵɵtemplate(4, BankAccountComponent_ng_container_1_dl_4_Template, 13, 0, \"dl\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"env\", ctx_r0.plaidEnvironment)(\"publicKey\", ctx_r0.plaidPublicKey)(\"countryCodes\", i0.ɵɵpureFunction0(5, _c0));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.accounts == null ? null : ctx_r0.accounts.length) > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.environment.production && !ctx_r0.accountData);\n  }\n}\n\nfunction BankAccountComponent_ng_template_2_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid institution \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BankAccountComponent_ng_template_2_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid account holder name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BankAccountComponent_ng_template_2_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid routing number \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BankAccountComponent_ng_template_2_mat_error_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid account number \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BankAccountComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 13);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 14);\n    i0.ɵɵelementStart(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Institution\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 15);\n    i0.ɵɵelementStart(5, \"mat-hint\");\n    i0.ɵɵtext(6, \"Errors appear instantly!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, BankAccountComponent_ng_template_2_mat_error_7_Template, 2, 0, \"mat-error\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-form-field\", 14);\n    i0.ɵɵelementStart(9, \"mat-label\");\n    i0.ɵɵtext(10, \"Holder name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 17);\n    i0.ɵɵelementStart(12, \"mat-hint\");\n    i0.ɵɵtext(13, \"Errors appear instantly!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, BankAccountComponent_ng_template_2_mat_error_14_Template, 2, 0, \"mat-error\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"mat-form-field\", 14);\n    i0.ɵɵelementStart(16, \"mat-label\");\n    i0.ɵɵtext(17, \"Routing number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 18);\n    i0.ɵɵelementStart(19, \"mat-hint\");\n    i0.ɵɵtext(20, \"Errors appear instantly!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, BankAccountComponent_ng_template_2_mat_error_21_Template, 2, 0, \"mat-error\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"mat-form-field\", 14);\n    i0.ɵɵelementStart(23, \"mat-label\");\n    i0.ɵɵtext(24, \"Account number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"input\", 19);\n    i0.ɵɵelementStart(26, \"mat-hint\");\n    i0.ɵɵtext(27, \"Errors appear instantly!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(28, BankAccountComponent_ng_template_2_mat_error_28_Template, 2, 0, \"mat-error\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.form);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"errorStateMatcher\", ctx_r2.matcher);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.institutionFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"errorStateMatcher\", ctx_r2.matcher);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.holderNameFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"errorStateMatcher\", ctx_r2.matcher);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.routingNumberFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"errorStateMatcher\", ctx_r2.matcher);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.accountNumberFormControl.hasError(\"required\"));\n  }\n} //#region Manual\n\n\nexport class MyErrorStateMatcher {\n  isErrorState(control, form) {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n\n} //#endregion\n\nexport let BankAccountComponent = /*#__PURE__*/(() => {\n  class BankAccountComponent {\n    //#endregion\n    constructor(paymentService, authService, fmBuilder) {\n      this.paymentService = paymentService;\n      this.authService = authService;\n      this.fmBuilder = fmBuilder;\n      this.environment = environment;\n      this.mode = 'Auto';\n      this.matcher = new MyErrorStateMatcher();\n      this.plaidEnvironment = environment.plaid.environment;\n      this.plaidPublicKey = environment.plaid.publicKey;\n    }\n\n    get accounts() {\n      return this.accountData && this.accountData.metadata.accounts;\n    }\n\n    get institutionFormControl() {\n      return this.form.get('institution');\n    }\n\n    get holderNameFormControl() {\n      return this.form.get('holderName');\n    }\n\n    get routingNumberFormControl() {\n      return this.form.get('routingNumber');\n    }\n\n    get accountNumberFormControl() {\n      return this.form.get('accountNumber');\n    }\n\n    ngOnInit() {} //#region Auto\n\n\n    onPlaidSuccess($event) {\n      this.accountData = $event;\n\n      if (this.accountData.metadata.account.id) {\n        this.selectedAccount = this.accountData.metadata.account;\n      }\n    }\n\n    onPlaidExit($event) {}\n\n    onPlaidLoad($event) {}\n\n    onPlaidEvent($event) {}\n\n    onPlaidClick($event) {} //#endregion\n    //#region Manual\n\n\n    createForm() {\n      return this.fmBuilder.group({\n        institution: ['', [Validators.required]],\n        holderName: ['', [Validators.required]],\n        routingNumber: ['', [Validators.required]],\n        accountNumber: ['', [Validators.required]]\n      });\n    } //#endregion\n\n\n    attachSource(attackToMe) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const req = {\n          accountId: this.selectedAccount.id,\n          publicToken: this.accountData.metadata.public_token,\n          customerId: attackToMe ? this.authService.credentials.user.uid : undefined\n        };\n        yield this.paymentService.createBankAccountToken(req);\n      });\n    }\n\n    createBankAccount(attackToMe) {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.mode === 'Manual') {\n          this.createBankAccountManualToken(attackToMe);\n        } else if (this.mode === 'Auto') {\n          this.createBankAccountPlaidToken(attackToMe);\n        }\n      });\n    }\n\n    createBankAccountManualToken(attackToMe) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const req = {\n          data: this.form.getRawValue(),\n          type: 'BankAccountManual',\n          uid: attackToMe ? this.authService.credentials.user.uid : undefined\n        };\n        yield this.paymentService.createPaymentMethod(req);\n      });\n    }\n\n    createBankAccountPlaidToken(attackToMe) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const req = {\n          data: {\n            accountId: this.selectedAccount.id,\n            publicToken: this.accountData.metadata.public_token\n          },\n          type: 'BankAccountPlaidToken',\n          uid: attackToMe ? this.authService.credentials.user.uid : undefined\n        };\n        yield this.paymentService.createPaymentMethod(req);\n      });\n    }\n\n  }\n\n  BankAccountComponent.ɵfac = function BankAccountComponent_Factory(t) {\n    return new (t || BankAccountComponent)(i0.ɵɵdirectiveInject(i1.PaymentService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  BankAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BankAccountComponent,\n    selectors: [[\"app-bank-account\"]],\n    inputs: {\n      mode: \"mode\"\n    },\n    decls: 4,\n    vars: 2,\n    consts: [[\"fxFlex\", \"\", \"fxLayout\", \"column\", \"fxLayoutGap\", \"20px\", \"fxLayoutAlign\", \"center center\"], [4, \"ngIf\", \"ngIfElse\"], [\"manual\", \"\"], [\"ngxPlaidLink\", \"\", \"institution\", \"\", 3, \"env\", \"publicKey\", \"countryCodes\", \"Success\", \"Exit\", \"Load\", \"Event\", \"Click\"], [\"fxLayout\", \"column\", \"fxFlexAlign\", \"stretch\", \"fxLayoutGap\", \"20px\", 4, \"ngIf\"], [\"fxFlex\", \"\", \"fxLayout\", \"row wrap\", 4, \"ngIf\"], [\"fxLayout\", \"column\", \"fxFlexAlign\", \"stretch\", \"fxLayoutGap\", \"20px\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"fxFlex\", \"\", \"fxLayout\", \"row wrap\"], [\"fxFlex\", \"30%\", \"fxLayout\", \"row\", 1, \"mx-0\"], [\"fxFlex\", \"calc(70%-40px)\", \"fxLayout\", \"row\"], [\"fxFlex\", \"30%\", \"fxLayout\", \"row\"], [\"fxFlex\", \"\", 3, \"formGroup\"], [\"appearance\", \"fill\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"institution\", \"placeholder\", \"Chase, Bank of America\", 3, \"errorStateMatcher\"], [4, \"ngIf\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"holderName\", \"placeholder\", \"John Smith\", 3, \"errorStateMatcher\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"routingNumber\", 3, \"errorStateMatcher\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"accountNumber\", 3, \"errorStateMatcher\"]],\n    template: function BankAccountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵtemplate(1, BankAccountComponent_ng_container_1_Template, 5, 6, \"ng-container\", 1);\n        i0.ɵɵtemplate(2, BankAccountComponent_ng_template_2_Template, 29, 9, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mode === \"Auto\")(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [i4.DefaultFlexDirective, i4.DefaultLayoutDirective, i4.DefaultLayoutGapDirective, i4.DefaultLayoutAlignDirective, i5.NgIf, i6.NgxPlaidLinkDirective, i4.DefaultFlexAlignDirective, i5.NgForOf, i7.MatCard, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i8.MatFormField, i8.MatLabel, i9.MatInput, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i8.MatHint, i8.MatError],\n    styles: [\"\"]\n  });\n  return BankAccountComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}