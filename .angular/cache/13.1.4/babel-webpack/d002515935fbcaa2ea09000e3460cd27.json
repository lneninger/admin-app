{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { environment } from './../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@ngxs/store\";\nexport let EndpointFactory = /*#__PURE__*/(() => {\n  class EndpointFactory {\n    constructor(http, store) {\n      this.http = http;\n      this.store = store;\n    }\n\n    get token() {\n      return this.store.selectSnapshot(selector => selector.authState.token);\n    }\n\n    getRequestHeaders(responseType = 'json') {\n      const headers = new HttpHeaders({\n        Authorization: 'Bearer ' + this.token,\n        'Content-Type': 'application/json',\n        Accept: `application/vnd.iman.v${environment.appVersion}+json, application/json, text/plain, */*`,\n        'App-Version': environment.appVersion\n      });\n      const result = {\n        headers,\n        responseType: responseType\n      };\n      return result;\n    }\n\n    handleError(error) {\n      if (error.status === 401) {\n        return throwError('session expired');\n      }\n\n      return throwError(error);\n    }\n\n  }\n\n  EndpointFactory.apiVersion = '1';\n\n  EndpointFactory.ɵfac = function EndpointFactory_Factory(t) {\n    return new (t || EndpointFactory)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Store));\n  };\n\n  EndpointFactory.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EndpointFactory,\n    factory: EndpointFactory.ɵfac,\n    providedIn: 'root'\n  });\n  return EndpointFactory;\n})();","map":null,"metadata":{},"sourceType":"module"}